// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener/extensions/pkg/webhook/cloudprovider (interfaces: Ensurer)
//
// Generated by this command:
//
//	mockgen -package=mock -destination=mocks.go github.com/gardener/gardener/extensions/pkg/webhook/cloudprovider Ensurer
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	context0 "github.com/gardener/gardener/extensions/pkg/webhook/context"
	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockEnsurer is a mock of Ensurer interface.
type MockEnsurer struct {
	ctrl     *gomock.Controller
	recorder *MockEnsurerMockRecorder
	isgomock struct{}
}

// MockEnsurerMockRecorder is the mock recorder for MockEnsurer.
type MockEnsurerMockRecorder struct {
	mock *MockEnsurer
}

// NewMockEnsurer creates a new mock instance.
func NewMockEnsurer(ctrl *gomock.Controller) *MockEnsurer {
	mock := &MockEnsurer{ctrl: ctrl}
	mock.recorder = &MockEnsurerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnsurer) EXPECT() *MockEnsurerMockRecorder {
	return m.recorder
}

// EnsureCloudProviderSecret mocks base method.
func (m *MockEnsurer) EnsureCloudProviderSecret(ctx context.Context, gctx context0.GardenContext, new, old *v1.Secret) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureCloudProviderSecret", ctx, gctx, new, old)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureCloudProviderSecret indicates an expected call of EnsureCloudProviderSecret.
func (mr *MockEnsurerMockRecorder) EnsureCloudProviderSecret(ctx, gctx, new, old any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureCloudProviderSecret", reflect.TypeOf((*MockEnsurer)(nil).EnsureCloudProviderSecret), ctx, gctx, new, old)
}
