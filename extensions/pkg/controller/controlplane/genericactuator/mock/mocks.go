// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener/extensions/pkg/controller/controlplane/genericactuator (interfaces: ValuesProvider)
//
// Generated by this command:
//
//	mockgen -package=mock -destination=mocks.go github.com/gardener/gardener/extensions/pkg/controller/controlplane/genericactuator ValuesProvider
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	controller "github.com/gardener/gardener/extensions/pkg/controller"
	v1alpha1 "github.com/gardener/gardener/pkg/apis/extensions/v1alpha1"
	manager "github.com/gardener/gardener/pkg/utils/secrets/manager"
	gomock "go.uber.org/mock/gomock"
)

// MockValuesProvider is a mock of ValuesProvider interface.
type MockValuesProvider struct {
	ctrl     *gomock.Controller
	recorder *MockValuesProviderMockRecorder
	isgomock struct{}
}

// MockValuesProviderMockRecorder is the mock recorder for MockValuesProvider.
type MockValuesProviderMockRecorder struct {
	mock *MockValuesProvider
}

// NewMockValuesProvider creates a new mock instance.
func NewMockValuesProvider(ctrl *gomock.Controller) *MockValuesProvider {
	mock := &MockValuesProvider{ctrl: ctrl}
	mock.recorder = &MockValuesProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValuesProvider) EXPECT() *MockValuesProviderMockRecorder {
	return m.recorder
}

// GetConfigChartValues mocks base method.
func (m *MockValuesProvider) GetConfigChartValues(ctx context.Context, cp *v1alpha1.ControlPlane, cluster *controller.Cluster) (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigChartValues", ctx, cp, cluster)
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigChartValues indicates an expected call of GetConfigChartValues.
func (mr *MockValuesProviderMockRecorder) GetConfigChartValues(ctx, cp, cluster any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigChartValues", reflect.TypeOf((*MockValuesProvider)(nil).GetConfigChartValues), ctx, cp, cluster)
}

// GetControlPlaneChartValues mocks base method.
func (m *MockValuesProvider) GetControlPlaneChartValues(ctx context.Context, cp *v1alpha1.ControlPlane, cluster *controller.Cluster, secretsReader manager.Reader, checksums map[string]string, scaledDown bool) (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetControlPlaneChartValues", ctx, cp, cluster, secretsReader, checksums, scaledDown)
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetControlPlaneChartValues indicates an expected call of GetControlPlaneChartValues.
func (mr *MockValuesProviderMockRecorder) GetControlPlaneChartValues(ctx, cp, cluster, secretsReader, checksums, scaledDown any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetControlPlaneChartValues", reflect.TypeOf((*MockValuesProvider)(nil).GetControlPlaneChartValues), ctx, cp, cluster, secretsReader, checksums, scaledDown)
}

// GetControlPlaneExposureChartValues mocks base method.
func (m *MockValuesProvider) GetControlPlaneExposureChartValues(ctx context.Context, cp *v1alpha1.ControlPlane, cluster *controller.Cluster, secretsReader manager.Reader, checksums map[string]string) (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetControlPlaneExposureChartValues", ctx, cp, cluster, secretsReader, checksums)
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetControlPlaneExposureChartValues indicates an expected call of GetControlPlaneExposureChartValues.
func (mr *MockValuesProviderMockRecorder) GetControlPlaneExposureChartValues(ctx, cp, cluster, secretsReader, checksums any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetControlPlaneExposureChartValues", reflect.TypeOf((*MockValuesProvider)(nil).GetControlPlaneExposureChartValues), ctx, cp, cluster, secretsReader, checksums)
}

// GetControlPlaneShootCRDsChartValues mocks base method.
func (m *MockValuesProvider) GetControlPlaneShootCRDsChartValues(ctx context.Context, cp *v1alpha1.ControlPlane, cluster *controller.Cluster) (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetControlPlaneShootCRDsChartValues", ctx, cp, cluster)
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetControlPlaneShootCRDsChartValues indicates an expected call of GetControlPlaneShootCRDsChartValues.
func (mr *MockValuesProviderMockRecorder) GetControlPlaneShootCRDsChartValues(ctx, cp, cluster any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetControlPlaneShootCRDsChartValues", reflect.TypeOf((*MockValuesProvider)(nil).GetControlPlaneShootCRDsChartValues), ctx, cp, cluster)
}

// GetControlPlaneShootChartValues mocks base method.
func (m *MockValuesProvider) GetControlPlaneShootChartValues(ctx context.Context, cp *v1alpha1.ControlPlane, cluster *controller.Cluster, secretsReader manager.Reader, checksums map[string]string) (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetControlPlaneShootChartValues", ctx, cp, cluster, secretsReader, checksums)
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetControlPlaneShootChartValues indicates an expected call of GetControlPlaneShootChartValues.
func (mr *MockValuesProviderMockRecorder) GetControlPlaneShootChartValues(ctx, cp, cluster, secretsReader, checksums any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetControlPlaneShootChartValues", reflect.TypeOf((*MockValuesProvider)(nil).GetControlPlaneShootChartValues), ctx, cp, cluster, secretsReader, checksums)
}

// GetStorageClassesChartValues mocks base method.
func (m *MockValuesProvider) GetStorageClassesChartValues(ctx context.Context, cp *v1alpha1.ControlPlane, cluster *controller.Cluster) (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStorageClassesChartValues", ctx, cp, cluster)
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStorageClassesChartValues indicates an expected call of GetStorageClassesChartValues.
func (mr *MockValuesProviderMockRecorder) GetStorageClassesChartValues(ctx, cp, cluster any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorageClassesChartValues", reflect.TypeOf((*MockValuesProvider)(nil).GetStorageClassesChartValues), ctx, cp, cluster)
}
