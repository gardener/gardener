//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	core "github.com/gardener/gardener/pkg/apis/core"
	v1 "github.com/gardener/gardener/pkg/apis/core/v1"
	v1beta1 "github.com/gardener/gardener/pkg/apis/core/v1beta1"
	seedmanagement "github.com/gardener/gardener/pkg/apis/seedmanagement"
	corev1 "k8s.io/api/core/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Gardenlet)(nil), (*seedmanagement.Gardenlet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Gardenlet_To_seedmanagement_Gardenlet(a.(*Gardenlet), b.(*seedmanagement.Gardenlet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.Gardenlet)(nil), (*Gardenlet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_Gardenlet_To_v1alpha1_Gardenlet(a.(*seedmanagement.Gardenlet), b.(*Gardenlet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GardenletDeployment)(nil), (*seedmanagement.GardenletDeployment)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GardenletDeployment_To_seedmanagement_GardenletDeployment(a.(*GardenletDeployment), b.(*seedmanagement.GardenletDeployment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.GardenletDeployment)(nil), (*GardenletDeployment)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_GardenletDeployment_To_v1alpha1_GardenletDeployment(a.(*seedmanagement.GardenletDeployment), b.(*GardenletDeployment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GardenletHelm)(nil), (*seedmanagement.GardenletHelm)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GardenletHelm_To_seedmanagement_GardenletHelm(a.(*GardenletHelm), b.(*seedmanagement.GardenletHelm), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.GardenletHelm)(nil), (*GardenletHelm)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_GardenletHelm_To_v1alpha1_GardenletHelm(a.(*seedmanagement.GardenletHelm), b.(*GardenletHelm), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GardenletList)(nil), (*seedmanagement.GardenletList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GardenletList_To_seedmanagement_GardenletList(a.(*GardenletList), b.(*seedmanagement.GardenletList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.GardenletList)(nil), (*GardenletList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_GardenletList_To_v1alpha1_GardenletList(a.(*seedmanagement.GardenletList), b.(*GardenletList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GardenletSelfDeployment)(nil), (*seedmanagement.GardenletSelfDeployment)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GardenletSelfDeployment_To_seedmanagement_GardenletSelfDeployment(a.(*GardenletSelfDeployment), b.(*seedmanagement.GardenletSelfDeployment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.GardenletSelfDeployment)(nil), (*GardenletSelfDeployment)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_GardenletSelfDeployment_To_v1alpha1_GardenletSelfDeployment(a.(*seedmanagement.GardenletSelfDeployment), b.(*GardenletSelfDeployment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GardenletStatus)(nil), (*seedmanagement.GardenletStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GardenletStatus_To_seedmanagement_GardenletStatus(a.(*GardenletStatus), b.(*seedmanagement.GardenletStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.GardenletStatus)(nil), (*GardenletStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_GardenletStatus_To_v1alpha1_GardenletStatus(a.(*seedmanagement.GardenletStatus), b.(*GardenletStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Image)(nil), (*seedmanagement.Image)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Image_To_seedmanagement_Image(a.(*Image), b.(*seedmanagement.Image), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.Image)(nil), (*Image)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_Image_To_v1alpha1_Image(a.(*seedmanagement.Image), b.(*Image), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ManagedSeed)(nil), (*seedmanagement.ManagedSeed)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ManagedSeed_To_seedmanagement_ManagedSeed(a.(*ManagedSeed), b.(*seedmanagement.ManagedSeed), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.ManagedSeed)(nil), (*ManagedSeed)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_ManagedSeed_To_v1alpha1_ManagedSeed(a.(*seedmanagement.ManagedSeed), b.(*ManagedSeed), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ManagedSeedList)(nil), (*seedmanagement.ManagedSeedList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ManagedSeedList_To_seedmanagement_ManagedSeedList(a.(*ManagedSeedList), b.(*seedmanagement.ManagedSeedList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.ManagedSeedList)(nil), (*ManagedSeedList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_ManagedSeedList_To_v1alpha1_ManagedSeedList(a.(*seedmanagement.ManagedSeedList), b.(*ManagedSeedList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ManagedSeedSet)(nil), (*seedmanagement.ManagedSeedSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ManagedSeedSet_To_seedmanagement_ManagedSeedSet(a.(*ManagedSeedSet), b.(*seedmanagement.ManagedSeedSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.ManagedSeedSet)(nil), (*ManagedSeedSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_ManagedSeedSet_To_v1alpha1_ManagedSeedSet(a.(*seedmanagement.ManagedSeedSet), b.(*ManagedSeedSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ManagedSeedSetList)(nil), (*seedmanagement.ManagedSeedSetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ManagedSeedSetList_To_seedmanagement_ManagedSeedSetList(a.(*ManagedSeedSetList), b.(*seedmanagement.ManagedSeedSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.ManagedSeedSetList)(nil), (*ManagedSeedSetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_ManagedSeedSetList_To_v1alpha1_ManagedSeedSetList(a.(*seedmanagement.ManagedSeedSetList), b.(*ManagedSeedSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ManagedSeedSetSpec)(nil), (*seedmanagement.ManagedSeedSetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ManagedSeedSetSpec_To_seedmanagement_ManagedSeedSetSpec(a.(*ManagedSeedSetSpec), b.(*seedmanagement.ManagedSeedSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.ManagedSeedSetSpec)(nil), (*ManagedSeedSetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_ManagedSeedSetSpec_To_v1alpha1_ManagedSeedSetSpec(a.(*seedmanagement.ManagedSeedSetSpec), b.(*ManagedSeedSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ManagedSeedSetStatus)(nil), (*seedmanagement.ManagedSeedSetStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ManagedSeedSetStatus_To_seedmanagement_ManagedSeedSetStatus(a.(*ManagedSeedSetStatus), b.(*seedmanagement.ManagedSeedSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.ManagedSeedSetStatus)(nil), (*ManagedSeedSetStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_ManagedSeedSetStatus_To_v1alpha1_ManagedSeedSetStatus(a.(*seedmanagement.ManagedSeedSetStatus), b.(*ManagedSeedSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ManagedSeedSpec)(nil), (*seedmanagement.ManagedSeedSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ManagedSeedSpec_To_seedmanagement_ManagedSeedSpec(a.(*ManagedSeedSpec), b.(*seedmanagement.ManagedSeedSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.ManagedSeedSpec)(nil), (*ManagedSeedSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_ManagedSeedSpec_To_v1alpha1_ManagedSeedSpec(a.(*seedmanagement.ManagedSeedSpec), b.(*ManagedSeedSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ManagedSeedStatus)(nil), (*seedmanagement.ManagedSeedStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ManagedSeedStatus_To_seedmanagement_ManagedSeedStatus(a.(*ManagedSeedStatus), b.(*seedmanagement.ManagedSeedStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.ManagedSeedStatus)(nil), (*ManagedSeedStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_ManagedSeedStatus_To_v1alpha1_ManagedSeedStatus(a.(*seedmanagement.ManagedSeedStatus), b.(*ManagedSeedStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ManagedSeedTemplate)(nil), (*seedmanagement.ManagedSeedTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ManagedSeedTemplate_To_seedmanagement_ManagedSeedTemplate(a.(*ManagedSeedTemplate), b.(*seedmanagement.ManagedSeedTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.ManagedSeedTemplate)(nil), (*ManagedSeedTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_ManagedSeedTemplate_To_v1alpha1_ManagedSeedTemplate(a.(*seedmanagement.ManagedSeedTemplate), b.(*ManagedSeedTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PendingReplica)(nil), (*seedmanagement.PendingReplica)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PendingReplica_To_seedmanagement_PendingReplica(a.(*PendingReplica), b.(*seedmanagement.PendingReplica), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.PendingReplica)(nil), (*PendingReplica)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_PendingReplica_To_v1alpha1_PendingReplica(a.(*seedmanagement.PendingReplica), b.(*PendingReplica), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RollingUpdateStrategy)(nil), (*seedmanagement.RollingUpdateStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RollingUpdateStrategy_To_seedmanagement_RollingUpdateStrategy(a.(*RollingUpdateStrategy), b.(*seedmanagement.RollingUpdateStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.RollingUpdateStrategy)(nil), (*RollingUpdateStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_RollingUpdateStrategy_To_v1alpha1_RollingUpdateStrategy(a.(*seedmanagement.RollingUpdateStrategy), b.(*RollingUpdateStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Shoot)(nil), (*seedmanagement.Shoot)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Shoot_To_seedmanagement_Shoot(a.(*Shoot), b.(*seedmanagement.Shoot), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.Shoot)(nil), (*Shoot)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_Shoot_To_v1alpha1_Shoot(a.(*seedmanagement.Shoot), b.(*Shoot), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*UpdateStrategy)(nil), (*seedmanagement.UpdateStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_UpdateStrategy_To_seedmanagement_UpdateStrategy(a.(*UpdateStrategy), b.(*seedmanagement.UpdateStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*seedmanagement.UpdateStrategy)(nil), (*UpdateStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_UpdateStrategy_To_v1alpha1_UpdateStrategy(a.(*seedmanagement.UpdateStrategy), b.(*UpdateStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*core.OCIRepository)(nil), (*v1.OCIRepository)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_core_OCIRepository_To_v1_OCIRepository(a.(*core.OCIRepository), b.(*v1.OCIRepository), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*core.SeedTemplate)(nil), (*v1beta1.SeedTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_core_SeedTemplate_To_v1beta1_SeedTemplate(a.(*core.SeedTemplate), b.(*v1beta1.SeedTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*core.ShootTemplate)(nil), (*v1beta1.ShootTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_core_ShootTemplate_To_v1beta1_ShootTemplate(a.(*core.ShootTemplate), b.(*v1beta1.ShootTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*seedmanagement.GardenletConfig)(nil), (*GardenletConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_GardenletConfig_To_v1alpha1_GardenletConfig(a.(*seedmanagement.GardenletConfig), b.(*GardenletConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*seedmanagement.GardenletSpec)(nil), (*GardenletSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_seedmanagement_GardenletSpec_To_v1alpha1_GardenletSpec(a.(*seedmanagement.GardenletSpec), b.(*GardenletSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.OCIRepository)(nil), (*core.OCIRepository)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_OCIRepository_To_core_OCIRepository(a.(*v1.OCIRepository), b.(*core.OCIRepository), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*GardenletConfig)(nil), (*seedmanagement.GardenletConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GardenletConfig_To_seedmanagement_GardenletConfig(a.(*GardenletConfig), b.(*seedmanagement.GardenletConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*GardenletSpec)(nil), (*seedmanagement.GardenletSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GardenletSpec_To_seedmanagement_GardenletSpec(a.(*GardenletSpec), b.(*seedmanagement.GardenletSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta1.SeedTemplate)(nil), (*core.SeedTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_SeedTemplate_To_core_SeedTemplate(a.(*v1beta1.SeedTemplate), b.(*core.SeedTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta1.ShootTemplate)(nil), (*core.ShootTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ShootTemplate_To_core_ShootTemplate(a.(*v1beta1.ShootTemplate), b.(*core.ShootTemplate), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Gardenlet_To_seedmanagement_Gardenlet(in *Gardenlet, out *seedmanagement.Gardenlet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_GardenletSpec_To_seedmanagement_GardenletSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_GardenletStatus_To_seedmanagement_GardenletStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Gardenlet_To_seedmanagement_Gardenlet is an autogenerated conversion function.
func Convert_v1alpha1_Gardenlet_To_seedmanagement_Gardenlet(in *Gardenlet, out *seedmanagement.Gardenlet, s conversion.Scope) error {
	return autoConvert_v1alpha1_Gardenlet_To_seedmanagement_Gardenlet(in, out, s)
}

func autoConvert_seedmanagement_Gardenlet_To_v1alpha1_Gardenlet(in *seedmanagement.Gardenlet, out *Gardenlet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_seedmanagement_GardenletSpec_To_v1alpha1_GardenletSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_seedmanagement_GardenletStatus_To_v1alpha1_GardenletStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_seedmanagement_Gardenlet_To_v1alpha1_Gardenlet is an autogenerated conversion function.
func Convert_seedmanagement_Gardenlet_To_v1alpha1_Gardenlet(in *seedmanagement.Gardenlet, out *Gardenlet, s conversion.Scope) error {
	return autoConvert_seedmanagement_Gardenlet_To_v1alpha1_Gardenlet(in, out, s)
}

func autoConvert_v1alpha1_GardenletConfig_To_seedmanagement_GardenletConfig(in *GardenletConfig, out *seedmanagement.GardenletConfig, s conversion.Scope) error {
	out.Deployment = (*seedmanagement.GardenletDeployment)(unsafe.Pointer(in.Deployment))
	if err := runtime.Convert_runtime_RawExtension_To_runtime_Object(&in.Config, &out.Config, s); err != nil {
		return err
	}
	out.Bootstrap = (*seedmanagement.Bootstrap)(unsafe.Pointer(in.Bootstrap))
	out.MergeWithParent = (*bool)(unsafe.Pointer(in.MergeWithParent))
	return nil
}

func autoConvert_seedmanagement_GardenletConfig_To_v1alpha1_GardenletConfig(in *seedmanagement.GardenletConfig, out *GardenletConfig, s conversion.Scope) error {
	out.Deployment = (*GardenletDeployment)(unsafe.Pointer(in.Deployment))
	if err := runtime.Convert_runtime_Object_To_runtime_RawExtension(&in.Config, &out.Config, s); err != nil {
		return err
	}
	out.Bootstrap = (*Bootstrap)(unsafe.Pointer(in.Bootstrap))
	out.MergeWithParent = (*bool)(unsafe.Pointer(in.MergeWithParent))
	return nil
}

func autoConvert_v1alpha1_GardenletDeployment_To_seedmanagement_GardenletDeployment(in *GardenletDeployment, out *seedmanagement.GardenletDeployment, s conversion.Scope) error {
	out.ReplicaCount = (*int32)(unsafe.Pointer(in.ReplicaCount))
	out.RevisionHistoryLimit = (*int32)(unsafe.Pointer(in.RevisionHistoryLimit))
	out.ServiceAccountName = (*string)(unsafe.Pointer(in.ServiceAccountName))
	out.Image = (*seedmanagement.Image)(unsafe.Pointer(in.Image))
	out.Resources = (*corev1.ResourceRequirements)(unsafe.Pointer(in.Resources))
	out.PodLabels = *(*map[string]string)(unsafe.Pointer(&in.PodLabels))
	out.PodAnnotations = *(*map[string]string)(unsafe.Pointer(&in.PodAnnotations))
	out.AdditionalVolumes = *(*[]corev1.Volume)(unsafe.Pointer(&in.AdditionalVolumes))
	out.AdditionalVolumeMounts = *(*[]corev1.VolumeMount)(unsafe.Pointer(&in.AdditionalVolumeMounts))
	out.Env = *(*[]corev1.EnvVar)(unsafe.Pointer(&in.Env))
	return nil
}

// Convert_v1alpha1_GardenletDeployment_To_seedmanagement_GardenletDeployment is an autogenerated conversion function.
func Convert_v1alpha1_GardenletDeployment_To_seedmanagement_GardenletDeployment(in *GardenletDeployment, out *seedmanagement.GardenletDeployment, s conversion.Scope) error {
	return autoConvert_v1alpha1_GardenletDeployment_To_seedmanagement_GardenletDeployment(in, out, s)
}

func autoConvert_seedmanagement_GardenletDeployment_To_v1alpha1_GardenletDeployment(in *seedmanagement.GardenletDeployment, out *GardenletDeployment, s conversion.Scope) error {
	out.ReplicaCount = (*int32)(unsafe.Pointer(in.ReplicaCount))
	out.RevisionHistoryLimit = (*int32)(unsafe.Pointer(in.RevisionHistoryLimit))
	out.ServiceAccountName = (*string)(unsafe.Pointer(in.ServiceAccountName))
	out.Image = (*Image)(unsafe.Pointer(in.Image))
	out.Resources = (*corev1.ResourceRequirements)(unsafe.Pointer(in.Resources))
	out.PodLabels = *(*map[string]string)(unsafe.Pointer(&in.PodLabels))
	out.PodAnnotations = *(*map[string]string)(unsafe.Pointer(&in.PodAnnotations))
	out.AdditionalVolumes = *(*[]corev1.Volume)(unsafe.Pointer(&in.AdditionalVolumes))
	out.AdditionalVolumeMounts = *(*[]corev1.VolumeMount)(unsafe.Pointer(&in.AdditionalVolumeMounts))
	out.Env = *(*[]corev1.EnvVar)(unsafe.Pointer(&in.Env))
	return nil
}

// Convert_seedmanagement_GardenletDeployment_To_v1alpha1_GardenletDeployment is an autogenerated conversion function.
func Convert_seedmanagement_GardenletDeployment_To_v1alpha1_GardenletDeployment(in *seedmanagement.GardenletDeployment, out *GardenletDeployment, s conversion.Scope) error {
	return autoConvert_seedmanagement_GardenletDeployment_To_v1alpha1_GardenletDeployment(in, out, s)
}

func autoConvert_v1alpha1_GardenletHelm_To_seedmanagement_GardenletHelm(in *GardenletHelm, out *seedmanagement.GardenletHelm, s conversion.Scope) error {
	if err := Convert_v1_OCIRepository_To_core_OCIRepository(&in.OCIRepository, &out.OCIRepository, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_GardenletHelm_To_seedmanagement_GardenletHelm is an autogenerated conversion function.
func Convert_v1alpha1_GardenletHelm_To_seedmanagement_GardenletHelm(in *GardenletHelm, out *seedmanagement.GardenletHelm, s conversion.Scope) error {
	return autoConvert_v1alpha1_GardenletHelm_To_seedmanagement_GardenletHelm(in, out, s)
}

func autoConvert_seedmanagement_GardenletHelm_To_v1alpha1_GardenletHelm(in *seedmanagement.GardenletHelm, out *GardenletHelm, s conversion.Scope) error {
	if err := Convert_core_OCIRepository_To_v1_OCIRepository(&in.OCIRepository, &out.OCIRepository, s); err != nil {
		return err
	}
	return nil
}

// Convert_seedmanagement_GardenletHelm_To_v1alpha1_GardenletHelm is an autogenerated conversion function.
func Convert_seedmanagement_GardenletHelm_To_v1alpha1_GardenletHelm(in *seedmanagement.GardenletHelm, out *GardenletHelm, s conversion.Scope) error {
	return autoConvert_seedmanagement_GardenletHelm_To_v1alpha1_GardenletHelm(in, out, s)
}

func autoConvert_v1alpha1_GardenletList_To_seedmanagement_GardenletList(in *GardenletList, out *seedmanagement.GardenletList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]seedmanagement.Gardenlet, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Gardenlet_To_seedmanagement_Gardenlet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_GardenletList_To_seedmanagement_GardenletList is an autogenerated conversion function.
func Convert_v1alpha1_GardenletList_To_seedmanagement_GardenletList(in *GardenletList, out *seedmanagement.GardenletList, s conversion.Scope) error {
	return autoConvert_v1alpha1_GardenletList_To_seedmanagement_GardenletList(in, out, s)
}

func autoConvert_seedmanagement_GardenletList_To_v1alpha1_GardenletList(in *seedmanagement.GardenletList, out *GardenletList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Gardenlet, len(*in))
		for i := range *in {
			if err := Convert_seedmanagement_Gardenlet_To_v1alpha1_Gardenlet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_seedmanagement_GardenletList_To_v1alpha1_GardenletList is an autogenerated conversion function.
func Convert_seedmanagement_GardenletList_To_v1alpha1_GardenletList(in *seedmanagement.GardenletList, out *GardenletList, s conversion.Scope) error {
	return autoConvert_seedmanagement_GardenletList_To_v1alpha1_GardenletList(in, out, s)
}

func autoConvert_v1alpha1_GardenletSelfDeployment_To_seedmanagement_GardenletSelfDeployment(in *GardenletSelfDeployment, out *seedmanagement.GardenletSelfDeployment, s conversion.Scope) error {
	if err := Convert_v1alpha1_GardenletDeployment_To_seedmanagement_GardenletDeployment(&in.GardenletDeployment, &out.GardenletDeployment, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_GardenletHelm_To_seedmanagement_GardenletHelm(&in.Helm, &out.Helm, s); err != nil {
		return err
	}
	out.ImageVectorOverwrite = (*string)(unsafe.Pointer(in.ImageVectorOverwrite))
	out.ComponentImageVectorOverwrite = (*string)(unsafe.Pointer(in.ComponentImageVectorOverwrite))
	return nil
}

// Convert_v1alpha1_GardenletSelfDeployment_To_seedmanagement_GardenletSelfDeployment is an autogenerated conversion function.
func Convert_v1alpha1_GardenletSelfDeployment_To_seedmanagement_GardenletSelfDeployment(in *GardenletSelfDeployment, out *seedmanagement.GardenletSelfDeployment, s conversion.Scope) error {
	return autoConvert_v1alpha1_GardenletSelfDeployment_To_seedmanagement_GardenletSelfDeployment(in, out, s)
}

func autoConvert_seedmanagement_GardenletSelfDeployment_To_v1alpha1_GardenletSelfDeployment(in *seedmanagement.GardenletSelfDeployment, out *GardenletSelfDeployment, s conversion.Scope) error {
	if err := Convert_seedmanagement_GardenletDeployment_To_v1alpha1_GardenletDeployment(&in.GardenletDeployment, &out.GardenletDeployment, s); err != nil {
		return err
	}
	if err := Convert_seedmanagement_GardenletHelm_To_v1alpha1_GardenletHelm(&in.Helm, &out.Helm, s); err != nil {
		return err
	}
	out.ImageVectorOverwrite = (*string)(unsafe.Pointer(in.ImageVectorOverwrite))
	out.ComponentImageVectorOverwrite = (*string)(unsafe.Pointer(in.ComponentImageVectorOverwrite))
	return nil
}

// Convert_seedmanagement_GardenletSelfDeployment_To_v1alpha1_GardenletSelfDeployment is an autogenerated conversion function.
func Convert_seedmanagement_GardenletSelfDeployment_To_v1alpha1_GardenletSelfDeployment(in *seedmanagement.GardenletSelfDeployment, out *GardenletSelfDeployment, s conversion.Scope) error {
	return autoConvert_seedmanagement_GardenletSelfDeployment_To_v1alpha1_GardenletSelfDeployment(in, out, s)
}

func autoConvert_v1alpha1_GardenletSpec_To_seedmanagement_GardenletSpec(in *GardenletSpec, out *seedmanagement.GardenletSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_GardenletSelfDeployment_To_seedmanagement_GardenletSelfDeployment(&in.Deployment, &out.Deployment, s); err != nil {
		return err
	}
	if err := runtime.Convert_runtime_RawExtension_To_runtime_Object(&in.Config, &out.Config, s); err != nil {
		return err
	}
	out.KubeconfigSecretRef = (*corev1.LocalObjectReference)(unsafe.Pointer(in.KubeconfigSecretRef))
	return nil
}

func autoConvert_seedmanagement_GardenletSpec_To_v1alpha1_GardenletSpec(in *seedmanagement.GardenletSpec, out *GardenletSpec, s conversion.Scope) error {
	if err := Convert_seedmanagement_GardenletSelfDeployment_To_v1alpha1_GardenletSelfDeployment(&in.Deployment, &out.Deployment, s); err != nil {
		return err
	}
	if err := runtime.Convert_runtime_Object_To_runtime_RawExtension(&in.Config, &out.Config, s); err != nil {
		return err
	}
	out.KubeconfigSecretRef = (*corev1.LocalObjectReference)(unsafe.Pointer(in.KubeconfigSecretRef))
	return nil
}

func autoConvert_v1alpha1_GardenletStatus_To_seedmanagement_GardenletStatus(in *GardenletStatus, out *seedmanagement.GardenletStatus, s conversion.Scope) error {
	out.Conditions = *(*[]core.Condition)(unsafe.Pointer(&in.Conditions))
	out.ObservedGeneration = in.ObservedGeneration
	return nil
}

// Convert_v1alpha1_GardenletStatus_To_seedmanagement_GardenletStatus is an autogenerated conversion function.
func Convert_v1alpha1_GardenletStatus_To_seedmanagement_GardenletStatus(in *GardenletStatus, out *seedmanagement.GardenletStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_GardenletStatus_To_seedmanagement_GardenletStatus(in, out, s)
}

func autoConvert_seedmanagement_GardenletStatus_To_v1alpha1_GardenletStatus(in *seedmanagement.GardenletStatus, out *GardenletStatus, s conversion.Scope) error {
	out.Conditions = *(*[]v1beta1.Condition)(unsafe.Pointer(&in.Conditions))
	out.ObservedGeneration = in.ObservedGeneration
	return nil
}

// Convert_seedmanagement_GardenletStatus_To_v1alpha1_GardenletStatus is an autogenerated conversion function.
func Convert_seedmanagement_GardenletStatus_To_v1alpha1_GardenletStatus(in *seedmanagement.GardenletStatus, out *GardenletStatus, s conversion.Scope) error {
	return autoConvert_seedmanagement_GardenletStatus_To_v1alpha1_GardenletStatus(in, out, s)
}

func autoConvert_v1alpha1_Image_To_seedmanagement_Image(in *Image, out *seedmanagement.Image, s conversion.Scope) error {
	out.Repository = (*string)(unsafe.Pointer(in.Repository))
	out.Tag = (*string)(unsafe.Pointer(in.Tag))
	out.PullPolicy = (*corev1.PullPolicy)(unsafe.Pointer(in.PullPolicy))
	return nil
}

// Convert_v1alpha1_Image_To_seedmanagement_Image is an autogenerated conversion function.
func Convert_v1alpha1_Image_To_seedmanagement_Image(in *Image, out *seedmanagement.Image, s conversion.Scope) error {
	return autoConvert_v1alpha1_Image_To_seedmanagement_Image(in, out, s)
}

func autoConvert_seedmanagement_Image_To_v1alpha1_Image(in *seedmanagement.Image, out *Image, s conversion.Scope) error {
	out.Repository = (*string)(unsafe.Pointer(in.Repository))
	out.Tag = (*string)(unsafe.Pointer(in.Tag))
	out.PullPolicy = (*corev1.PullPolicy)(unsafe.Pointer(in.PullPolicy))
	return nil
}

// Convert_seedmanagement_Image_To_v1alpha1_Image is an autogenerated conversion function.
func Convert_seedmanagement_Image_To_v1alpha1_Image(in *seedmanagement.Image, out *Image, s conversion.Scope) error {
	return autoConvert_seedmanagement_Image_To_v1alpha1_Image(in, out, s)
}

func autoConvert_v1alpha1_ManagedSeed_To_seedmanagement_ManagedSeed(in *ManagedSeed, out *seedmanagement.ManagedSeed, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ManagedSeedSpec_To_seedmanagement_ManagedSeedSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ManagedSeedStatus_To_seedmanagement_ManagedSeedStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ManagedSeed_To_seedmanagement_ManagedSeed is an autogenerated conversion function.
func Convert_v1alpha1_ManagedSeed_To_seedmanagement_ManagedSeed(in *ManagedSeed, out *seedmanagement.ManagedSeed, s conversion.Scope) error {
	return autoConvert_v1alpha1_ManagedSeed_To_seedmanagement_ManagedSeed(in, out, s)
}

func autoConvert_seedmanagement_ManagedSeed_To_v1alpha1_ManagedSeed(in *seedmanagement.ManagedSeed, out *ManagedSeed, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_seedmanagement_ManagedSeedSpec_To_v1alpha1_ManagedSeedSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_seedmanagement_ManagedSeedStatus_To_v1alpha1_ManagedSeedStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_seedmanagement_ManagedSeed_To_v1alpha1_ManagedSeed is an autogenerated conversion function.
func Convert_seedmanagement_ManagedSeed_To_v1alpha1_ManagedSeed(in *seedmanagement.ManagedSeed, out *ManagedSeed, s conversion.Scope) error {
	return autoConvert_seedmanagement_ManagedSeed_To_v1alpha1_ManagedSeed(in, out, s)
}

func autoConvert_v1alpha1_ManagedSeedList_To_seedmanagement_ManagedSeedList(in *ManagedSeedList, out *seedmanagement.ManagedSeedList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]seedmanagement.ManagedSeed, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_ManagedSeed_To_seedmanagement_ManagedSeed(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_ManagedSeedList_To_seedmanagement_ManagedSeedList is an autogenerated conversion function.
func Convert_v1alpha1_ManagedSeedList_To_seedmanagement_ManagedSeedList(in *ManagedSeedList, out *seedmanagement.ManagedSeedList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ManagedSeedList_To_seedmanagement_ManagedSeedList(in, out, s)
}

func autoConvert_seedmanagement_ManagedSeedList_To_v1alpha1_ManagedSeedList(in *seedmanagement.ManagedSeedList, out *ManagedSeedList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedSeed, len(*in))
		for i := range *in {
			if err := Convert_seedmanagement_ManagedSeed_To_v1alpha1_ManagedSeed(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_seedmanagement_ManagedSeedList_To_v1alpha1_ManagedSeedList is an autogenerated conversion function.
func Convert_seedmanagement_ManagedSeedList_To_v1alpha1_ManagedSeedList(in *seedmanagement.ManagedSeedList, out *ManagedSeedList, s conversion.Scope) error {
	return autoConvert_seedmanagement_ManagedSeedList_To_v1alpha1_ManagedSeedList(in, out, s)
}

func autoConvert_v1alpha1_ManagedSeedSet_To_seedmanagement_ManagedSeedSet(in *ManagedSeedSet, out *seedmanagement.ManagedSeedSet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ManagedSeedSetSpec_To_seedmanagement_ManagedSeedSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ManagedSeedSetStatus_To_seedmanagement_ManagedSeedSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ManagedSeedSet_To_seedmanagement_ManagedSeedSet is an autogenerated conversion function.
func Convert_v1alpha1_ManagedSeedSet_To_seedmanagement_ManagedSeedSet(in *ManagedSeedSet, out *seedmanagement.ManagedSeedSet, s conversion.Scope) error {
	return autoConvert_v1alpha1_ManagedSeedSet_To_seedmanagement_ManagedSeedSet(in, out, s)
}

func autoConvert_seedmanagement_ManagedSeedSet_To_v1alpha1_ManagedSeedSet(in *seedmanagement.ManagedSeedSet, out *ManagedSeedSet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_seedmanagement_ManagedSeedSetSpec_To_v1alpha1_ManagedSeedSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_seedmanagement_ManagedSeedSetStatus_To_v1alpha1_ManagedSeedSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_seedmanagement_ManagedSeedSet_To_v1alpha1_ManagedSeedSet is an autogenerated conversion function.
func Convert_seedmanagement_ManagedSeedSet_To_v1alpha1_ManagedSeedSet(in *seedmanagement.ManagedSeedSet, out *ManagedSeedSet, s conversion.Scope) error {
	return autoConvert_seedmanagement_ManagedSeedSet_To_v1alpha1_ManagedSeedSet(in, out, s)
}

func autoConvert_v1alpha1_ManagedSeedSetList_To_seedmanagement_ManagedSeedSetList(in *ManagedSeedSetList, out *seedmanagement.ManagedSeedSetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]seedmanagement.ManagedSeedSet, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_ManagedSeedSet_To_seedmanagement_ManagedSeedSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_ManagedSeedSetList_To_seedmanagement_ManagedSeedSetList is an autogenerated conversion function.
func Convert_v1alpha1_ManagedSeedSetList_To_seedmanagement_ManagedSeedSetList(in *ManagedSeedSetList, out *seedmanagement.ManagedSeedSetList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ManagedSeedSetList_To_seedmanagement_ManagedSeedSetList(in, out, s)
}

func autoConvert_seedmanagement_ManagedSeedSetList_To_v1alpha1_ManagedSeedSetList(in *seedmanagement.ManagedSeedSetList, out *ManagedSeedSetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedSeedSet, len(*in))
		for i := range *in {
			if err := Convert_seedmanagement_ManagedSeedSet_To_v1alpha1_ManagedSeedSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_seedmanagement_ManagedSeedSetList_To_v1alpha1_ManagedSeedSetList is an autogenerated conversion function.
func Convert_seedmanagement_ManagedSeedSetList_To_v1alpha1_ManagedSeedSetList(in *seedmanagement.ManagedSeedSetList, out *ManagedSeedSetList, s conversion.Scope) error {
	return autoConvert_seedmanagement_ManagedSeedSetList_To_v1alpha1_ManagedSeedSetList(in, out, s)
}

func autoConvert_v1alpha1_ManagedSeedSetSpec_To_seedmanagement_ManagedSeedSetSpec(in *ManagedSeedSetSpec, out *seedmanagement.ManagedSeedSetSpec, s conversion.Scope) error {
	out.Replicas = (*int32)(unsafe.Pointer(in.Replicas))
	out.Selector = in.Selector
	if err := Convert_v1alpha1_ManagedSeedTemplate_To_seedmanagement_ManagedSeedTemplate(&in.Template, &out.Template, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_ShootTemplate_To_core_ShootTemplate(&in.ShootTemplate, &out.ShootTemplate, s); err != nil {
		return err
	}
	out.UpdateStrategy = (*seedmanagement.UpdateStrategy)(unsafe.Pointer(in.UpdateStrategy))
	out.RevisionHistoryLimit = (*int32)(unsafe.Pointer(in.RevisionHistoryLimit))
	return nil
}

// Convert_v1alpha1_ManagedSeedSetSpec_To_seedmanagement_ManagedSeedSetSpec is an autogenerated conversion function.
func Convert_v1alpha1_ManagedSeedSetSpec_To_seedmanagement_ManagedSeedSetSpec(in *ManagedSeedSetSpec, out *seedmanagement.ManagedSeedSetSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ManagedSeedSetSpec_To_seedmanagement_ManagedSeedSetSpec(in, out, s)
}

func autoConvert_seedmanagement_ManagedSeedSetSpec_To_v1alpha1_ManagedSeedSetSpec(in *seedmanagement.ManagedSeedSetSpec, out *ManagedSeedSetSpec, s conversion.Scope) error {
	out.Replicas = (*int32)(unsafe.Pointer(in.Replicas))
	out.Selector = in.Selector
	if err := Convert_seedmanagement_ManagedSeedTemplate_To_v1alpha1_ManagedSeedTemplate(&in.Template, &out.Template, s); err != nil {
		return err
	}
	if err := Convert_core_ShootTemplate_To_v1beta1_ShootTemplate(&in.ShootTemplate, &out.ShootTemplate, s); err != nil {
		return err
	}
	out.UpdateStrategy = (*UpdateStrategy)(unsafe.Pointer(in.UpdateStrategy))
	out.RevisionHistoryLimit = (*int32)(unsafe.Pointer(in.RevisionHistoryLimit))
	return nil
}

// Convert_seedmanagement_ManagedSeedSetSpec_To_v1alpha1_ManagedSeedSetSpec is an autogenerated conversion function.
func Convert_seedmanagement_ManagedSeedSetSpec_To_v1alpha1_ManagedSeedSetSpec(in *seedmanagement.ManagedSeedSetSpec, out *ManagedSeedSetSpec, s conversion.Scope) error {
	return autoConvert_seedmanagement_ManagedSeedSetSpec_To_v1alpha1_ManagedSeedSetSpec(in, out, s)
}

func autoConvert_v1alpha1_ManagedSeedSetStatus_To_seedmanagement_ManagedSeedSetStatus(in *ManagedSeedSetStatus, out *seedmanagement.ManagedSeedSetStatus, s conversion.Scope) error {
	out.ObservedGeneration = in.ObservedGeneration
	out.Replicas = in.Replicas
	out.ReadyReplicas = in.ReadyReplicas
	out.NextReplicaNumber = in.NextReplicaNumber
	out.CurrentReplicas = in.CurrentReplicas
	out.UpdatedReplicas = in.UpdatedReplicas
	out.CurrentRevision = in.CurrentRevision
	out.UpdateRevision = in.UpdateRevision
	out.CollisionCount = (*int32)(unsafe.Pointer(in.CollisionCount))
	out.Conditions = *(*[]core.Condition)(unsafe.Pointer(&in.Conditions))
	out.PendingReplica = (*seedmanagement.PendingReplica)(unsafe.Pointer(in.PendingReplica))
	return nil
}

// Convert_v1alpha1_ManagedSeedSetStatus_To_seedmanagement_ManagedSeedSetStatus is an autogenerated conversion function.
func Convert_v1alpha1_ManagedSeedSetStatus_To_seedmanagement_ManagedSeedSetStatus(in *ManagedSeedSetStatus, out *seedmanagement.ManagedSeedSetStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ManagedSeedSetStatus_To_seedmanagement_ManagedSeedSetStatus(in, out, s)
}

func autoConvert_seedmanagement_ManagedSeedSetStatus_To_v1alpha1_ManagedSeedSetStatus(in *seedmanagement.ManagedSeedSetStatus, out *ManagedSeedSetStatus, s conversion.Scope) error {
	out.ObservedGeneration = in.ObservedGeneration
	out.Replicas = in.Replicas
	out.ReadyReplicas = in.ReadyReplicas
	out.NextReplicaNumber = in.NextReplicaNumber
	out.CurrentReplicas = in.CurrentReplicas
	out.UpdatedReplicas = in.UpdatedReplicas
	out.CurrentRevision = in.CurrentRevision
	out.UpdateRevision = in.UpdateRevision
	out.CollisionCount = (*int32)(unsafe.Pointer(in.CollisionCount))
	out.Conditions = *(*[]v1beta1.Condition)(unsafe.Pointer(&in.Conditions))
	out.PendingReplica = (*PendingReplica)(unsafe.Pointer(in.PendingReplica))
	return nil
}

// Convert_seedmanagement_ManagedSeedSetStatus_To_v1alpha1_ManagedSeedSetStatus is an autogenerated conversion function.
func Convert_seedmanagement_ManagedSeedSetStatus_To_v1alpha1_ManagedSeedSetStatus(in *seedmanagement.ManagedSeedSetStatus, out *ManagedSeedSetStatus, s conversion.Scope) error {
	return autoConvert_seedmanagement_ManagedSeedSetStatus_To_v1alpha1_ManagedSeedSetStatus(in, out, s)
}

func autoConvert_v1alpha1_ManagedSeedSpec_To_seedmanagement_ManagedSeedSpec(in *ManagedSeedSpec, out *seedmanagement.ManagedSeedSpec, s conversion.Scope) error {
	out.Shoot = (*seedmanagement.Shoot)(unsafe.Pointer(in.Shoot))
	if err := Convert_v1alpha1_GardenletConfig_To_seedmanagement_GardenletConfig(&in.Gardenlet, &out.Gardenlet, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ManagedSeedSpec_To_seedmanagement_ManagedSeedSpec is an autogenerated conversion function.
func Convert_v1alpha1_ManagedSeedSpec_To_seedmanagement_ManagedSeedSpec(in *ManagedSeedSpec, out *seedmanagement.ManagedSeedSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ManagedSeedSpec_To_seedmanagement_ManagedSeedSpec(in, out, s)
}

func autoConvert_seedmanagement_ManagedSeedSpec_To_v1alpha1_ManagedSeedSpec(in *seedmanagement.ManagedSeedSpec, out *ManagedSeedSpec, s conversion.Scope) error {
	out.Shoot = (*Shoot)(unsafe.Pointer(in.Shoot))
	if err := Convert_seedmanagement_GardenletConfig_To_v1alpha1_GardenletConfig(&in.Gardenlet, &out.Gardenlet, s); err != nil {
		return err
	}
	return nil
}

// Convert_seedmanagement_ManagedSeedSpec_To_v1alpha1_ManagedSeedSpec is an autogenerated conversion function.
func Convert_seedmanagement_ManagedSeedSpec_To_v1alpha1_ManagedSeedSpec(in *seedmanagement.ManagedSeedSpec, out *ManagedSeedSpec, s conversion.Scope) error {
	return autoConvert_seedmanagement_ManagedSeedSpec_To_v1alpha1_ManagedSeedSpec(in, out, s)
}

func autoConvert_v1alpha1_ManagedSeedStatus_To_seedmanagement_ManagedSeedStatus(in *ManagedSeedStatus, out *seedmanagement.ManagedSeedStatus, s conversion.Scope) error {
	out.Conditions = *(*[]core.Condition)(unsafe.Pointer(&in.Conditions))
	out.ObservedGeneration = in.ObservedGeneration
	return nil
}

// Convert_v1alpha1_ManagedSeedStatus_To_seedmanagement_ManagedSeedStatus is an autogenerated conversion function.
func Convert_v1alpha1_ManagedSeedStatus_To_seedmanagement_ManagedSeedStatus(in *ManagedSeedStatus, out *seedmanagement.ManagedSeedStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ManagedSeedStatus_To_seedmanagement_ManagedSeedStatus(in, out, s)
}

func autoConvert_seedmanagement_ManagedSeedStatus_To_v1alpha1_ManagedSeedStatus(in *seedmanagement.ManagedSeedStatus, out *ManagedSeedStatus, s conversion.Scope) error {
	out.Conditions = *(*[]v1beta1.Condition)(unsafe.Pointer(&in.Conditions))
	out.ObservedGeneration = in.ObservedGeneration
	return nil
}

// Convert_seedmanagement_ManagedSeedStatus_To_v1alpha1_ManagedSeedStatus is an autogenerated conversion function.
func Convert_seedmanagement_ManagedSeedStatus_To_v1alpha1_ManagedSeedStatus(in *seedmanagement.ManagedSeedStatus, out *ManagedSeedStatus, s conversion.Scope) error {
	return autoConvert_seedmanagement_ManagedSeedStatus_To_v1alpha1_ManagedSeedStatus(in, out, s)
}

func autoConvert_v1alpha1_ManagedSeedTemplate_To_seedmanagement_ManagedSeedTemplate(in *ManagedSeedTemplate, out *seedmanagement.ManagedSeedTemplate, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ManagedSeedSpec_To_seedmanagement_ManagedSeedSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ManagedSeedTemplate_To_seedmanagement_ManagedSeedTemplate is an autogenerated conversion function.
func Convert_v1alpha1_ManagedSeedTemplate_To_seedmanagement_ManagedSeedTemplate(in *ManagedSeedTemplate, out *seedmanagement.ManagedSeedTemplate, s conversion.Scope) error {
	return autoConvert_v1alpha1_ManagedSeedTemplate_To_seedmanagement_ManagedSeedTemplate(in, out, s)
}

func autoConvert_seedmanagement_ManagedSeedTemplate_To_v1alpha1_ManagedSeedTemplate(in *seedmanagement.ManagedSeedTemplate, out *ManagedSeedTemplate, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_seedmanagement_ManagedSeedSpec_To_v1alpha1_ManagedSeedSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_seedmanagement_ManagedSeedTemplate_To_v1alpha1_ManagedSeedTemplate is an autogenerated conversion function.
func Convert_seedmanagement_ManagedSeedTemplate_To_v1alpha1_ManagedSeedTemplate(in *seedmanagement.ManagedSeedTemplate, out *ManagedSeedTemplate, s conversion.Scope) error {
	return autoConvert_seedmanagement_ManagedSeedTemplate_To_v1alpha1_ManagedSeedTemplate(in, out, s)
}

func autoConvert_v1alpha1_PendingReplica_To_seedmanagement_PendingReplica(in *PendingReplica, out *seedmanagement.PendingReplica, s conversion.Scope) error {
	out.Name = in.Name
	out.Reason = seedmanagement.PendingReplicaReason(in.Reason)
	out.Since = in.Since
	out.Retries = (*int32)(unsafe.Pointer(in.Retries))
	return nil
}

// Convert_v1alpha1_PendingReplica_To_seedmanagement_PendingReplica is an autogenerated conversion function.
func Convert_v1alpha1_PendingReplica_To_seedmanagement_PendingReplica(in *PendingReplica, out *seedmanagement.PendingReplica, s conversion.Scope) error {
	return autoConvert_v1alpha1_PendingReplica_To_seedmanagement_PendingReplica(in, out, s)
}

func autoConvert_seedmanagement_PendingReplica_To_v1alpha1_PendingReplica(in *seedmanagement.PendingReplica, out *PendingReplica, s conversion.Scope) error {
	out.Name = in.Name
	out.Reason = PendingReplicaReason(in.Reason)
	out.Since = in.Since
	out.Retries = (*int32)(unsafe.Pointer(in.Retries))
	return nil
}

// Convert_seedmanagement_PendingReplica_To_v1alpha1_PendingReplica is an autogenerated conversion function.
func Convert_seedmanagement_PendingReplica_To_v1alpha1_PendingReplica(in *seedmanagement.PendingReplica, out *PendingReplica, s conversion.Scope) error {
	return autoConvert_seedmanagement_PendingReplica_To_v1alpha1_PendingReplica(in, out, s)
}

func autoConvert_v1alpha1_RollingUpdateStrategy_To_seedmanagement_RollingUpdateStrategy(in *RollingUpdateStrategy, out *seedmanagement.RollingUpdateStrategy, s conversion.Scope) error {
	out.Partition = (*int32)(unsafe.Pointer(in.Partition))
	return nil
}

// Convert_v1alpha1_RollingUpdateStrategy_To_seedmanagement_RollingUpdateStrategy is an autogenerated conversion function.
func Convert_v1alpha1_RollingUpdateStrategy_To_seedmanagement_RollingUpdateStrategy(in *RollingUpdateStrategy, out *seedmanagement.RollingUpdateStrategy, s conversion.Scope) error {
	return autoConvert_v1alpha1_RollingUpdateStrategy_To_seedmanagement_RollingUpdateStrategy(in, out, s)
}

func autoConvert_seedmanagement_RollingUpdateStrategy_To_v1alpha1_RollingUpdateStrategy(in *seedmanagement.RollingUpdateStrategy, out *RollingUpdateStrategy, s conversion.Scope) error {
	out.Partition = (*int32)(unsafe.Pointer(in.Partition))
	return nil
}

// Convert_seedmanagement_RollingUpdateStrategy_To_v1alpha1_RollingUpdateStrategy is an autogenerated conversion function.
func Convert_seedmanagement_RollingUpdateStrategy_To_v1alpha1_RollingUpdateStrategy(in *seedmanagement.RollingUpdateStrategy, out *RollingUpdateStrategy, s conversion.Scope) error {
	return autoConvert_seedmanagement_RollingUpdateStrategy_To_v1alpha1_RollingUpdateStrategy(in, out, s)
}

func autoConvert_v1alpha1_Shoot_To_seedmanagement_Shoot(in *Shoot, out *seedmanagement.Shoot, s conversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_v1alpha1_Shoot_To_seedmanagement_Shoot is an autogenerated conversion function.
func Convert_v1alpha1_Shoot_To_seedmanagement_Shoot(in *Shoot, out *seedmanagement.Shoot, s conversion.Scope) error {
	return autoConvert_v1alpha1_Shoot_To_seedmanagement_Shoot(in, out, s)
}

func autoConvert_seedmanagement_Shoot_To_v1alpha1_Shoot(in *seedmanagement.Shoot, out *Shoot, s conversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_seedmanagement_Shoot_To_v1alpha1_Shoot is an autogenerated conversion function.
func Convert_seedmanagement_Shoot_To_v1alpha1_Shoot(in *seedmanagement.Shoot, out *Shoot, s conversion.Scope) error {
	return autoConvert_seedmanagement_Shoot_To_v1alpha1_Shoot(in, out, s)
}

func autoConvert_v1alpha1_UpdateStrategy_To_seedmanagement_UpdateStrategy(in *UpdateStrategy, out *seedmanagement.UpdateStrategy, s conversion.Scope) error {
	out.Type = (*seedmanagement.UpdateStrategyType)(unsafe.Pointer(in.Type))
	out.RollingUpdate = (*seedmanagement.RollingUpdateStrategy)(unsafe.Pointer(in.RollingUpdate))
	return nil
}

// Convert_v1alpha1_UpdateStrategy_To_seedmanagement_UpdateStrategy is an autogenerated conversion function.
func Convert_v1alpha1_UpdateStrategy_To_seedmanagement_UpdateStrategy(in *UpdateStrategy, out *seedmanagement.UpdateStrategy, s conversion.Scope) error {
	return autoConvert_v1alpha1_UpdateStrategy_To_seedmanagement_UpdateStrategy(in, out, s)
}

func autoConvert_seedmanagement_UpdateStrategy_To_v1alpha1_UpdateStrategy(in *seedmanagement.UpdateStrategy, out *UpdateStrategy, s conversion.Scope) error {
	out.Type = (*UpdateStrategyType)(unsafe.Pointer(in.Type))
	out.RollingUpdate = (*RollingUpdateStrategy)(unsafe.Pointer(in.RollingUpdate))
	return nil
}

// Convert_seedmanagement_UpdateStrategy_To_v1alpha1_UpdateStrategy is an autogenerated conversion function.
func Convert_seedmanagement_UpdateStrategy_To_v1alpha1_UpdateStrategy(in *seedmanagement.UpdateStrategy, out *UpdateStrategy, s conversion.Scope) error {
	return autoConvert_seedmanagement_UpdateStrategy_To_v1alpha1_UpdateStrategy(in, out, s)
}
