// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
// 
// SPDX-License-Identifier: Apache-2.0

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.gardener.gardener.pkg.apis.authentication.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/gardener/gardener/pkg/apis/authentication/v1alpha1";

// AdminKubeconfigRequest can be used to request a kubeconfig with admin credentials
// for a Shoot cluster.
message AdminKubeconfigRequest {
  // Standard object metadata.
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the specification of the AdminKubeconfigRequest.
  optional AdminKubeconfigRequestSpec spec = 2;

  // Status is the status of the AdminKubeconfigRequest.
  optional AdminKubeconfigRequestStatus status = 3;
}

// AdminKubeconfigRequestSpec contains the expiration time of the kubeconfig.
message AdminKubeconfigRequestSpec {
  // ExpirationSeconds is the requested validity duration of the credential. The
  // credential issuer may return a credential with a different validity duration so a
  // client needs to check the 'expirationTimestamp' field in a response.
  // Defaults to 1 hour.
  // +optional
  optional int64 expirationSeconds = 1;
}

// AdminKubeconfigRequestStatus is the status of the AdminKubeconfigRequest containing
// the kubeconfig and expiration of the credential.
message AdminKubeconfigRequestStatus {
  // Kubeconfig contains the kubeconfig with cluster-admin privileges for the shoot cluster.
  optional bytes kubeconfig = 1;

  // ExpirationTimestamp is the expiration timestamp of the returned credential.
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time expirationTimestamp = 2;
}

// ViewerKubeconfigRequest can be used to request a kubeconfig with viewer credentials (excluding Secrets)
// for a Shoot cluster.
message ViewerKubeconfigRequest {
  // Standard object metadata.
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the specification of the ViewerKubeconfigRequest.
  optional ViewerKubeconfigRequestSpec spec = 2;

  // Status is the status of the ViewerKubeconfigRequest.
  optional ViewerKubeconfigRequestStatus status = 3;
}

// ViewerKubeconfigRequestSpec contains the expiration time of the kubeconfig.
message ViewerKubeconfigRequestSpec {
  // ExpirationSeconds is the requested validity duration of the credential. The
  // credential issuer may return a credential with a different validity duration so a
  // client needs to check the 'expirationTimestamp' field in a response.
  // Defaults to 1 hour.
  // +optional
  optional int64 expirationSeconds = 1;
}

// ViewerKubeconfigRequestStatus is the status of the ViewerKubeconfigRequest containing
// the kubeconfig and expiration of the credential.
message ViewerKubeconfigRequestStatus {
  // Kubeconfig contains the kubeconfig with viewer privileges (excluding Secrets) for the shoot cluster.
  optional bytes kubeconfig = 1;

  // ExpirationTimestamp is the expiration timestamp of the returned credential.
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time expirationTimestamp = 2;
}

