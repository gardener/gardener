// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener/pkg/component/extensions/extension (interfaces: Interface)
//
// Generated by this command:
//
//	mockgen -package extension -destination=mocks.go github.com/gardener/gardener/pkg/component/extensions/extension Interface
//

// Package extension is a generated GoMock package.
package extension

import (
	context "context"
	reflect "reflect"

	v1beta1 "github.com/gardener/gardener/pkg/apis/core/v1beta1"
	extension "github.com/gardener/gardener/pkg/component/extensions/extension"
	gomock "go.uber.org/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
	isgomock struct{}
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// DeleteResources mocks base method.
func (m *MockInterface) DeleteResources(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteResources", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteResources indicates an expected call of DeleteResources.
func (mr *MockInterfaceMockRecorder) DeleteResources(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteResources", reflect.TypeOf((*MockInterface)(nil).DeleteResources), arg0)
}

// DeleteStaleResources mocks base method.
func (m *MockInterface) DeleteStaleResources(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStaleResources", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStaleResources indicates an expected call of DeleteStaleResources.
func (mr *MockInterfaceMockRecorder) DeleteStaleResources(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStaleResources", reflect.TypeOf((*MockInterface)(nil).DeleteStaleResources), arg0)
}

// DeployAfterKubeAPIServer mocks base method.
func (m *MockInterface) DeployAfterKubeAPIServer(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeployAfterKubeAPIServer", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeployAfterKubeAPIServer indicates an expected call of DeployAfterKubeAPIServer.
func (mr *MockInterfaceMockRecorder) DeployAfterKubeAPIServer(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeployAfterKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).DeployAfterKubeAPIServer), ctx)
}

// DeployAfterWorker mocks base method.
func (m *MockInterface) DeployAfterWorker(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeployAfterWorker", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeployAfterWorker indicates an expected call of DeployAfterWorker.
func (mr *MockInterfaceMockRecorder) DeployAfterWorker(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeployAfterWorker", reflect.TypeOf((*MockInterface)(nil).DeployAfterWorker), ctx)
}

// DeployBeforeKubeAPIServer mocks base method.
func (m *MockInterface) DeployBeforeKubeAPIServer(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeployBeforeKubeAPIServer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeployBeforeKubeAPIServer indicates an expected call of DeployBeforeKubeAPIServer.
func (mr *MockInterfaceMockRecorder) DeployBeforeKubeAPIServer(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeployBeforeKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).DeployBeforeKubeAPIServer), arg0)
}

// DestroyAfterKubeAPIServer mocks base method.
func (m *MockInterface) DestroyAfterKubeAPIServer(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroyAfterKubeAPIServer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DestroyAfterKubeAPIServer indicates an expected call of DestroyAfterKubeAPIServer.
func (mr *MockInterfaceMockRecorder) DestroyAfterKubeAPIServer(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroyAfterKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).DestroyAfterKubeAPIServer), arg0)
}

// DestroyBeforeKubeAPIServer mocks base method.
func (m *MockInterface) DestroyBeforeKubeAPIServer(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroyBeforeKubeAPIServer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DestroyBeforeKubeAPIServer indicates an expected call of DestroyBeforeKubeAPIServer.
func (mr *MockInterfaceMockRecorder) DestroyBeforeKubeAPIServer(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroyBeforeKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).DestroyBeforeKubeAPIServer), arg0)
}

// Extensions mocks base method.
func (m *MockInterface) Extensions() map[string]extension.Extension {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Extensions")
	ret0, _ := ret[0].(map[string]extension.Extension)
	return ret0
}

// Extensions indicates an expected call of Extensions.
func (mr *MockInterfaceMockRecorder) Extensions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Extensions", reflect.TypeOf((*MockInterface)(nil).Extensions))
}

// MigrateAfterKubeAPIServer mocks base method.
func (m *MockInterface) MigrateAfterKubeAPIServer(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MigrateAfterKubeAPIServer", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// MigrateAfterKubeAPIServer indicates an expected call of MigrateAfterKubeAPIServer.
func (mr *MockInterfaceMockRecorder) MigrateAfterKubeAPIServer(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MigrateAfterKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).MigrateAfterKubeAPIServer), ctx)
}

// MigrateBeforeKubeAPIServer mocks base method.
func (m *MockInterface) MigrateBeforeKubeAPIServer(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MigrateBeforeKubeAPIServer", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// MigrateBeforeKubeAPIServer indicates an expected call of MigrateBeforeKubeAPIServer.
func (mr *MockInterfaceMockRecorder) MigrateBeforeKubeAPIServer(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MigrateBeforeKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).MigrateBeforeKubeAPIServer), ctx)
}

// RestoreAfterKubeAPIServer mocks base method.
func (m *MockInterface) RestoreAfterKubeAPIServer(ctx context.Context, shootState *v1beta1.ShootState) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RestoreAfterKubeAPIServer", ctx, shootState)
	ret0, _ := ret[0].(error)
	return ret0
}

// RestoreAfterKubeAPIServer indicates an expected call of RestoreAfterKubeAPIServer.
func (mr *MockInterfaceMockRecorder) RestoreAfterKubeAPIServer(ctx, shootState any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RestoreAfterKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).RestoreAfterKubeAPIServer), ctx, shootState)
}

// RestoreAfterWorker mocks base method.
func (m *MockInterface) RestoreAfterWorker(ctx context.Context, shootState *v1beta1.ShootState) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RestoreAfterWorker", ctx, shootState)
	ret0, _ := ret[0].(error)
	return ret0
}

// RestoreAfterWorker indicates an expected call of RestoreAfterWorker.
func (mr *MockInterfaceMockRecorder) RestoreAfterWorker(ctx, shootState any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RestoreAfterWorker", reflect.TypeOf((*MockInterface)(nil).RestoreAfterWorker), ctx, shootState)
}

// RestoreBeforeKubeAPIServer mocks base method.
func (m *MockInterface) RestoreBeforeKubeAPIServer(arg0 context.Context, arg1 *v1beta1.ShootState) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RestoreBeforeKubeAPIServer", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RestoreBeforeKubeAPIServer indicates an expected call of RestoreBeforeKubeAPIServer.
func (mr *MockInterfaceMockRecorder) RestoreBeforeKubeAPIServer(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RestoreBeforeKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).RestoreBeforeKubeAPIServer), arg0, arg1)
}

// WaitAfterKubeAPIServer mocks base method.
func (m *MockInterface) WaitAfterKubeAPIServer(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitAfterKubeAPIServer", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitAfterKubeAPIServer indicates an expected call of WaitAfterKubeAPIServer.
func (mr *MockInterfaceMockRecorder) WaitAfterKubeAPIServer(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitAfterKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).WaitAfterKubeAPIServer), ctx)
}

// WaitAfterWorker mocks base method.
func (m *MockInterface) WaitAfterWorker(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitAfterWorker", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitAfterWorker indicates an expected call of WaitAfterWorker.
func (mr *MockInterfaceMockRecorder) WaitAfterWorker(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitAfterWorker", reflect.TypeOf((*MockInterface)(nil).WaitAfterWorker), ctx)
}

// WaitBeforeKubeAPIServer mocks base method.
func (m *MockInterface) WaitBeforeKubeAPIServer(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitBeforeKubeAPIServer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitBeforeKubeAPIServer indicates an expected call of WaitBeforeKubeAPIServer.
func (mr *MockInterfaceMockRecorder) WaitBeforeKubeAPIServer(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitBeforeKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).WaitBeforeKubeAPIServer), arg0)
}

// WaitCleanup mocks base method.
func (m *MockInterface) WaitCleanup(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitCleanup", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitCleanup indicates an expected call of WaitCleanup.
func (mr *MockInterfaceMockRecorder) WaitCleanup(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitCleanup", reflect.TypeOf((*MockInterface)(nil).WaitCleanup), ctx)
}

// WaitCleanupAfterKubeAPIServer mocks base method.
func (m *MockInterface) WaitCleanupAfterKubeAPIServer(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitCleanupAfterKubeAPIServer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitCleanupAfterKubeAPIServer indicates an expected call of WaitCleanupAfterKubeAPIServer.
func (mr *MockInterfaceMockRecorder) WaitCleanupAfterKubeAPIServer(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitCleanupAfterKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).WaitCleanupAfterKubeAPIServer), arg0)
}

// WaitCleanupBeforeKubeAPIServer mocks base method.
func (m *MockInterface) WaitCleanupBeforeKubeAPIServer(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitCleanupBeforeKubeAPIServer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitCleanupBeforeKubeAPIServer indicates an expected call of WaitCleanupBeforeKubeAPIServer.
func (mr *MockInterfaceMockRecorder) WaitCleanupBeforeKubeAPIServer(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitCleanupBeforeKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).WaitCleanupBeforeKubeAPIServer), arg0)
}

// WaitCleanupResources mocks base method.
func (m *MockInterface) WaitCleanupResources(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitCleanupResources", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitCleanupResources indicates an expected call of WaitCleanupResources.
func (mr *MockInterfaceMockRecorder) WaitCleanupResources(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitCleanupResources", reflect.TypeOf((*MockInterface)(nil).WaitCleanupResources), arg0)
}

// WaitCleanupStaleResources mocks base method.
func (m *MockInterface) WaitCleanupStaleResources(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitCleanupStaleResources", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitCleanupStaleResources indicates an expected call of WaitCleanupStaleResources.
func (mr *MockInterfaceMockRecorder) WaitCleanupStaleResources(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitCleanupStaleResources", reflect.TypeOf((*MockInterface)(nil).WaitCleanupStaleResources), arg0)
}

// WaitMigrateAfterKubeAPIServer mocks base method.
func (m *MockInterface) WaitMigrateAfterKubeAPIServer(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitMigrateAfterKubeAPIServer", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitMigrateAfterKubeAPIServer indicates an expected call of WaitMigrateAfterKubeAPIServer.
func (mr *MockInterfaceMockRecorder) WaitMigrateAfterKubeAPIServer(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitMigrateAfterKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).WaitMigrateAfterKubeAPIServer), ctx)
}

// WaitMigrateBeforeKubeAPIServer mocks base method.
func (m *MockInterface) WaitMigrateBeforeKubeAPIServer(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitMigrateBeforeKubeAPIServer", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitMigrateBeforeKubeAPIServer indicates an expected call of WaitMigrateBeforeKubeAPIServer.
func (mr *MockInterfaceMockRecorder) WaitMigrateBeforeKubeAPIServer(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitMigrateBeforeKubeAPIServer", reflect.TypeOf((*MockInterface)(nil).WaitMigrateBeforeKubeAPIServer), ctx)
}
