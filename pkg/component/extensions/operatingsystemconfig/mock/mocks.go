// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener/pkg/component/extensions/operatingsystemconfig (interfaces: Interface)
//
// Generated by this command:
//
//	mockgen -package operatingsystemconfig -destination=mocks.go github.com/gardener/gardener/pkg/component/extensions/operatingsystemconfig Interface
//

// Package operatingsystemconfig is a generated GoMock package.
package operatingsystemconfig

import (
	context "context"
	reflect "reflect"

	v1beta1 "github.com/gardener/gardener/pkg/apis/core/v1beta1"
	operatingsystemconfig "github.com/gardener/gardener/pkg/component/extensions/operatingsystemconfig"
	gomock "go.uber.org/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
	isgomock struct{}
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// DeleteStaleResources mocks base method.
func (m *MockInterface) DeleteStaleResources(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStaleResources", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStaleResources indicates an expected call of DeleteStaleResources.
func (mr *MockInterfaceMockRecorder) DeleteStaleResources(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStaleResources", reflect.TypeOf((*MockInterface)(nil).DeleteStaleResources), arg0)
}

// Deploy mocks base method.
func (m *MockInterface) Deploy(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deploy", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Deploy indicates an expected call of Deploy.
func (mr *MockInterfaceMockRecorder) Deploy(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deploy", reflect.TypeOf((*MockInterface)(nil).Deploy), ctx)
}

// Destroy mocks base method.
func (m *MockInterface) Destroy(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Destroy", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Destroy indicates an expected call of Destroy.
func (mr *MockInterfaceMockRecorder) Destroy(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockInterface)(nil).Destroy), ctx)
}

// Migrate mocks base method.
func (m *MockInterface) Migrate(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Migrate", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Migrate indicates an expected call of Migrate.
func (mr *MockInterfaceMockRecorder) Migrate(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Migrate", reflect.TypeOf((*MockInterface)(nil).Migrate), ctx)
}

// Restore mocks base method.
func (m *MockInterface) Restore(ctx context.Context, shootState *v1beta1.ShootState) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Restore", ctx, shootState)
	ret0, _ := ret[0].(error)
	return ret0
}

// Restore indicates an expected call of Restore.
func (mr *MockInterfaceMockRecorder) Restore(ctx, shootState any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Restore", reflect.TypeOf((*MockInterface)(nil).Restore), ctx, shootState)
}

// SetAPIServerURL mocks base method.
func (m *MockInterface) SetAPIServerURL(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetAPIServerURL", arg0)
}

// SetAPIServerURL indicates an expected call of SetAPIServerURL.
func (mr *MockInterfaceMockRecorder) SetAPIServerURL(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAPIServerURL", reflect.TypeOf((*MockInterface)(nil).SetAPIServerURL), arg0)
}

// SetCABundle mocks base method.
func (m *MockInterface) SetCABundle(arg0 *string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetCABundle", arg0)
}

// SetCABundle indicates an expected call of SetCABundle.
func (mr *MockInterfaceMockRecorder) SetCABundle(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCABundle", reflect.TypeOf((*MockInterface)(nil).SetCABundle), arg0)
}

// SetClusterDNSAddresses mocks base method.
func (m *MockInterface) SetClusterDNSAddresses(arg0 []string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetClusterDNSAddresses", arg0)
}

// SetClusterDNSAddresses indicates an expected call of SetClusterDNSAddresses.
func (mr *MockInterfaceMockRecorder) SetClusterDNSAddresses(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetClusterDNSAddresses", reflect.TypeOf((*MockInterface)(nil).SetClusterDNSAddresses), arg0)
}

// SetCredentialsRotationStatus mocks base method.
func (m *MockInterface) SetCredentialsRotationStatus(arg0 *v1beta1.ShootCredentialsRotation) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetCredentialsRotationStatus", arg0)
}

// SetCredentialsRotationStatus indicates an expected call of SetCredentialsRotationStatus.
func (mr *MockInterfaceMockRecorder) SetCredentialsRotationStatus(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCredentialsRotationStatus", reflect.TypeOf((*MockInterface)(nil).SetCredentialsRotationStatus), arg0)
}

// SetSSHPublicKeys mocks base method.
func (m *MockInterface) SetSSHPublicKeys(arg0 []string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSSHPublicKeys", arg0)
}

// SetSSHPublicKeys indicates an expected call of SetSSHPublicKeys.
func (mr *MockInterfaceMockRecorder) SetSSHPublicKeys(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSSHPublicKeys", reflect.TypeOf((*MockInterface)(nil).SetSSHPublicKeys), arg0)
}

// Wait mocks base method.
func (m *MockInterface) Wait(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Wait", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Wait indicates an expected call of Wait.
func (mr *MockInterfaceMockRecorder) Wait(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Wait", reflect.TypeOf((*MockInterface)(nil).Wait), ctx)
}

// WaitCleanup mocks base method.
func (m *MockInterface) WaitCleanup(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitCleanup", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitCleanup indicates an expected call of WaitCleanup.
func (mr *MockInterfaceMockRecorder) WaitCleanup(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitCleanup", reflect.TypeOf((*MockInterface)(nil).WaitCleanup), ctx)
}

// WaitCleanupStaleResources mocks base method.
func (m *MockInterface) WaitCleanupStaleResources(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitCleanupStaleResources", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitCleanupStaleResources indicates an expected call of WaitCleanupStaleResources.
func (mr *MockInterfaceMockRecorder) WaitCleanupStaleResources(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitCleanupStaleResources", reflect.TypeOf((*MockInterface)(nil).WaitCleanupStaleResources), arg0)
}

// WaitMigrate mocks base method.
func (m *MockInterface) WaitMigrate(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitMigrate", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitMigrate indicates an expected call of WaitMigrate.
func (mr *MockInterfaceMockRecorder) WaitMigrate(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitMigrate", reflect.TypeOf((*MockInterface)(nil).WaitMigrate), ctx)
}

// WorkerPoolNameToOperatingSystemConfigsMap mocks base method.
func (m *MockInterface) WorkerPoolNameToOperatingSystemConfigsMap() map[string]*operatingsystemconfig.OperatingSystemConfigs {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WorkerPoolNameToOperatingSystemConfigsMap")
	ret0, _ := ret[0].(map[string]*operatingsystemconfig.OperatingSystemConfigs)
	return ret0
}

// WorkerPoolNameToOperatingSystemConfigsMap indicates an expected call of WorkerPoolNameToOperatingSystemConfigsMap.
func (mr *MockInterfaceMockRecorder) WorkerPoolNameToOperatingSystemConfigsMap() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WorkerPoolNameToOperatingSystemConfigsMap", reflect.TypeOf((*MockInterface)(nil).WorkerPoolNameToOperatingSystemConfigsMap))
}
