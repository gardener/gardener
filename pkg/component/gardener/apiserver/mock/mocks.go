// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener/pkg/component/gardener/apiserver (interfaces: Interface)
//
// Generated by this command:
//
//	mockgen -package mock -destination=mocks.go github.com/gardener/gardener/pkg/component/gardener/apiserver Interface
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	v1beta1 "github.com/gardener/gardener/pkg/apis/core/v1beta1"
	apiserver "github.com/gardener/gardener/pkg/component/apiserver"
	apiserver0 "github.com/gardener/gardener/pkg/component/gardener/apiserver"
	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
	isgomock struct{}
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Deploy mocks base method.
func (m *MockInterface) Deploy(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deploy", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Deploy indicates an expected call of Deploy.
func (mr *MockInterfaceMockRecorder) Deploy(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deploy", reflect.TypeOf((*MockInterface)(nil).Deploy), ctx)
}

// Destroy mocks base method.
func (m *MockInterface) Destroy(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Destroy", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Destroy indicates an expected call of Destroy.
func (mr *MockInterfaceMockRecorder) Destroy(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockInterface)(nil).Destroy), ctx)
}

// GetAutoscalingReplicas mocks base method.
func (m *MockInterface) GetAutoscalingReplicas() *int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAutoscalingReplicas")
	ret0, _ := ret[0].(*int32)
	return ret0
}

// GetAutoscalingReplicas indicates an expected call of GetAutoscalingReplicas.
func (mr *MockInterfaceMockRecorder) GetAutoscalingReplicas() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAutoscalingReplicas", reflect.TypeOf((*MockInterface)(nil).GetAutoscalingReplicas))
}

// GetValues mocks base method.
func (m *MockInterface) GetValues() apiserver0.Values {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValues")
	ret0, _ := ret[0].(apiserver0.Values)
	return ret0
}

// GetValues indicates an expected call of GetValues.
func (mr *MockInterfaceMockRecorder) GetValues() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValues", reflect.TypeOf((*MockInterface)(nil).GetValues))
}

// SetAutoscalingAPIServerResources mocks base method.
func (m *MockInterface) SetAutoscalingAPIServerResources(arg0 v1.ResourceRequirements) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetAutoscalingAPIServerResources", arg0)
}

// SetAutoscalingAPIServerResources indicates an expected call of SetAutoscalingAPIServerResources.
func (mr *MockInterfaceMockRecorder) SetAutoscalingAPIServerResources(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAutoscalingAPIServerResources", reflect.TypeOf((*MockInterface)(nil).SetAutoscalingAPIServerResources), arg0)
}

// SetAutoscalingReplicas mocks base method.
func (m *MockInterface) SetAutoscalingReplicas(arg0 *int32) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetAutoscalingReplicas", arg0)
}

// SetAutoscalingReplicas indicates an expected call of SetAutoscalingReplicas.
func (mr *MockInterfaceMockRecorder) SetAutoscalingReplicas(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAutoscalingReplicas", reflect.TypeOf((*MockInterface)(nil).SetAutoscalingReplicas), arg0)
}

// SetETCDEncryptionConfig mocks base method.
func (m *MockInterface) SetETCDEncryptionConfig(arg0 apiserver.ETCDEncryptionConfig) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetETCDEncryptionConfig", arg0)
}

// SetETCDEncryptionConfig indicates an expected call of SetETCDEncryptionConfig.
func (mr *MockInterfaceMockRecorder) SetETCDEncryptionConfig(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetETCDEncryptionConfig", reflect.TypeOf((*MockInterface)(nil).SetETCDEncryptionConfig), arg0)
}

// SetWorkloadIdentityKeyRotationPhase mocks base method.
func (m *MockInterface) SetWorkloadIdentityKeyRotationPhase(arg0 v1beta1.CredentialsRotationPhase) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetWorkloadIdentityKeyRotationPhase", arg0)
}

// SetWorkloadIdentityKeyRotationPhase indicates an expected call of SetWorkloadIdentityKeyRotationPhase.
func (mr *MockInterfaceMockRecorder) SetWorkloadIdentityKeyRotationPhase(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetWorkloadIdentityKeyRotationPhase", reflect.TypeOf((*MockInterface)(nil).SetWorkloadIdentityKeyRotationPhase), arg0)
}

// Wait mocks base method.
func (m *MockInterface) Wait(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Wait", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Wait indicates an expected call of Wait.
func (mr *MockInterfaceMockRecorder) Wait(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Wait", reflect.TypeOf((*MockInterface)(nil).Wait), ctx)
}

// WaitCleanup mocks base method.
func (m *MockInterface) WaitCleanup(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitCleanup", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitCleanup indicates an expected call of WaitCleanup.
func (mr *MockInterfaceMockRecorder) WaitCleanup(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitCleanup", reflect.TypeOf((*MockInterface)(nil).WaitCleanup), ctx)
}
