// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ClusterOpenIDConnectPresetSpecApplyConfiguration represents an declarative configuration of the ClusterOpenIDConnectPresetSpec type for use
// with apply.
type ClusterOpenIDConnectPresetSpecApplyConfiguration struct {
	OpenIDConnectPresetSpecApplyConfiguration `json:",inline"`
	ProjectSelector                           *v1.LabelSelector `json:"projectSelector,omitempty"`
}

// ClusterOpenIDConnectPresetSpecApplyConfiguration constructs an declarative configuration of the ClusterOpenIDConnectPresetSpec type for use with
// apply.
func ClusterOpenIDConnectPresetSpec() *ClusterOpenIDConnectPresetSpecApplyConfiguration {
	return &ClusterOpenIDConnectPresetSpecApplyConfiguration{}
}

// WithServer sets the Server field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Server field is set to the value of the last call.
func (b *ClusterOpenIDConnectPresetSpecApplyConfiguration) WithServer(value *KubeAPIServerOpenIDConnectApplyConfiguration) *ClusterOpenIDConnectPresetSpecApplyConfiguration {
	b.Server = value
	return b
}

// WithClient sets the Client field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Client field is set to the value of the last call.
func (b *ClusterOpenIDConnectPresetSpecApplyConfiguration) WithClient(value *OpenIDConnectClientAuthenticationApplyConfiguration) *ClusterOpenIDConnectPresetSpecApplyConfiguration {
	b.Client = value
	return b
}

// WithShootSelector sets the ShootSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ShootSelector field is set to the value of the last call.
func (b *ClusterOpenIDConnectPresetSpecApplyConfiguration) WithShootSelector(value v1.LabelSelector) *ClusterOpenIDConnectPresetSpecApplyConfiguration {
	b.ShootSelector = &value
	return b
}

// WithWeight sets the Weight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Weight field is set to the value of the last call.
func (b *ClusterOpenIDConnectPresetSpecApplyConfiguration) WithWeight(value int32) *ClusterOpenIDConnectPresetSpecApplyConfiguration {
	b.Weight = &value
	return b
}

// WithProjectSelector sets the ProjectSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProjectSelector field is set to the value of the last call.
func (b *ClusterOpenIDConnectPresetSpecApplyConfiguration) WithProjectSelector(value v1.LabelSelector) *ClusterOpenIDConnectPresetSpecApplyConfiguration {
	b.ProjectSelector = &value
	return b
}
