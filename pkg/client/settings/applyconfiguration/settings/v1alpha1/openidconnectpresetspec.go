// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// OpenIDConnectPresetSpecApplyConfiguration represents an declarative configuration of the OpenIDConnectPresetSpec type for use
// with apply.
type OpenIDConnectPresetSpecApplyConfiguration struct {
	Server        *KubeAPIServerOpenIDConnectApplyConfiguration        `json:"server,omitempty"`
	Client        *OpenIDConnectClientAuthenticationApplyConfiguration `json:"client,omitempty"`
	ShootSelector *v1.LabelSelector                                    `json:"shootSelector,omitempty"`
	Weight        *int32                                               `json:"weight,omitempty"`
}

// OpenIDConnectPresetSpecApplyConfiguration constructs an declarative configuration of the OpenIDConnectPresetSpec type for use with
// apply.
func OpenIDConnectPresetSpec() *OpenIDConnectPresetSpecApplyConfiguration {
	return &OpenIDConnectPresetSpecApplyConfiguration{}
}

// WithServer sets the Server field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Server field is set to the value of the last call.
func (b *OpenIDConnectPresetSpecApplyConfiguration) WithServer(value *KubeAPIServerOpenIDConnectApplyConfiguration) *OpenIDConnectPresetSpecApplyConfiguration {
	b.Server = value
	return b
}

// WithClient sets the Client field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Client field is set to the value of the last call.
func (b *OpenIDConnectPresetSpecApplyConfiguration) WithClient(value *OpenIDConnectClientAuthenticationApplyConfiguration) *OpenIDConnectPresetSpecApplyConfiguration {
	b.Client = value
	return b
}

// WithShootSelector sets the ShootSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ShootSelector field is set to the value of the last call.
func (b *OpenIDConnectPresetSpecApplyConfiguration) WithShootSelector(value v1.LabelSelector) *OpenIDConnectPresetSpecApplyConfiguration {
	b.ShootSelector = &value
	return b
}

// WithWeight sets the Weight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Weight field is set to the value of the last call.
func (b *OpenIDConnectPresetSpecApplyConfiguration) WithWeight(value int32) *OpenIDConnectPresetSpecApplyConfiguration {
	b.Weight = &value
	return b
}
