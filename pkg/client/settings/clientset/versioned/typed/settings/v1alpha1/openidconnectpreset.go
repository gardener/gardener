// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	settingsv1alpha1 "github.com/gardener/gardener/pkg/apis/settings/v1alpha1"
	scheme "github.com/gardener/gardener/pkg/client/settings/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// OpenIDConnectPresetsGetter has a method to return a OpenIDConnectPresetInterface.
// A group's client should implement this interface.
type OpenIDConnectPresetsGetter interface {
	OpenIDConnectPresets(namespace string) OpenIDConnectPresetInterface
}

// OpenIDConnectPresetInterface has methods to work with OpenIDConnectPreset resources.
type OpenIDConnectPresetInterface interface {
	Create(ctx context.Context, openIDConnectPreset *settingsv1alpha1.OpenIDConnectPreset, opts v1.CreateOptions) (*settingsv1alpha1.OpenIDConnectPreset, error)
	Update(ctx context.Context, openIDConnectPreset *settingsv1alpha1.OpenIDConnectPreset, opts v1.UpdateOptions) (*settingsv1alpha1.OpenIDConnectPreset, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*settingsv1alpha1.OpenIDConnectPreset, error)
	List(ctx context.Context, opts v1.ListOptions) (*settingsv1alpha1.OpenIDConnectPresetList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *settingsv1alpha1.OpenIDConnectPreset, err error)
	OpenIDConnectPresetExpansion
}

// openIDConnectPresets implements OpenIDConnectPresetInterface
type openIDConnectPresets struct {
	*gentype.ClientWithList[*settingsv1alpha1.OpenIDConnectPreset, *settingsv1alpha1.OpenIDConnectPresetList]
}

// newOpenIDConnectPresets returns a OpenIDConnectPresets
func newOpenIDConnectPresets(c *SettingsV1alpha1Client, namespace string) *openIDConnectPresets {
	return &openIDConnectPresets{
		gentype.NewClientWithList[*settingsv1alpha1.OpenIDConnectPreset, *settingsv1alpha1.OpenIDConnectPresetList](
			"openidconnectpresets",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *settingsv1alpha1.OpenIDConnectPreset { return &settingsv1alpha1.OpenIDConnectPreset{} },
			func() *settingsv1alpha1.OpenIDConnectPresetList { return &settingsv1alpha1.OpenIDConnectPresetList{} },
		),
	}
}
