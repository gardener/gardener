// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/gardener/gardener/pkg/apis/security/v1alpha1"
	scheme "github.com/gardener/gardener/pkg/client/security/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// CredentialsBindingsGetter has a method to return a CredentialsBindingInterface.
// A group's client should implement this interface.
type CredentialsBindingsGetter interface {
	CredentialsBindings(namespace string) CredentialsBindingInterface
}

// CredentialsBindingInterface has methods to work with CredentialsBinding resources.
type CredentialsBindingInterface interface {
	Create(ctx context.Context, credentialsBinding *v1alpha1.CredentialsBinding, opts v1.CreateOptions) (*v1alpha1.CredentialsBinding, error)
	Update(ctx context.Context, credentialsBinding *v1alpha1.CredentialsBinding, opts v1.UpdateOptions) (*v1alpha1.CredentialsBinding, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.CredentialsBinding, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.CredentialsBindingList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.CredentialsBinding, err error)
	CredentialsBindingExpansion
}

// credentialsBindings implements CredentialsBindingInterface
type credentialsBindings struct {
	*gentype.ClientWithList[*v1alpha1.CredentialsBinding, *v1alpha1.CredentialsBindingList]
}

// newCredentialsBindings returns a CredentialsBindings
func newCredentialsBindings(c *SecurityV1alpha1Client, namespace string) *credentialsBindings {
	return &credentialsBindings{
		gentype.NewClientWithList[*v1alpha1.CredentialsBinding, *v1alpha1.CredentialsBindingList](
			"credentialsbindings",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1alpha1.CredentialsBinding { return &v1alpha1.CredentialsBinding{} },
			func() *v1alpha1.CredentialsBindingList { return &v1alpha1.CredentialsBindingList{} }),
	}
}
