// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/gardener/gardener/pkg/apis/core/v1beta1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// ShootLister helps list Shoots.
// All objects returned here must be treated as read-only.
type ShootLister interface {
	// List lists all Shoots in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.Shoot, err error)
	// Shoots returns an object that can list and get Shoots.
	Shoots(namespace string) ShootNamespaceLister
	ShootListerExpansion
}

// shootLister implements the ShootLister interface.
type shootLister struct {
	listers.ResourceIndexer[*v1beta1.Shoot]
}

// NewShootLister returns a new ShootLister.
func NewShootLister(indexer cache.Indexer) ShootLister {
	return &shootLister{listers.New[*v1beta1.Shoot](indexer, v1beta1.Resource("shoot"))}
}

// Shoots returns an object that can list and get Shoots.
func (s *shootLister) Shoots(namespace string) ShootNamespaceLister {
	return shootNamespaceLister{listers.NewNamespaced[*v1beta1.Shoot](s.ResourceIndexer, namespace)}
}

// ShootNamespaceLister helps list and get Shoots.
// All objects returned here must be treated as read-only.
type ShootNamespaceLister interface {
	// List lists all Shoots in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.Shoot, err error)
	// Get retrieves the Shoot from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.Shoot, error)
	ShootNamespaceListerExpansion
}

// shootNamespaceLister implements the ShootNamespaceLister
// interface.
type shootNamespaceLister struct {
	listers.ResourceIndexer[*v1beta1.Shoot]
}
