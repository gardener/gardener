// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/gardener/gardener/pkg/apis/core/v1beta1"
	corev1beta1 "github.com/gardener/gardener/pkg/client/core/clientset/versioned/typed/core/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeBackupBuckets implements BackupBucketInterface
type fakeBackupBuckets struct {
	*gentype.FakeClientWithList[*v1beta1.BackupBucket, *v1beta1.BackupBucketList]
	Fake *FakeCoreV1beta1
}

func newFakeBackupBuckets(fake *FakeCoreV1beta1) corev1beta1.BackupBucketInterface {
	return &fakeBackupBuckets{
		gentype.NewFakeClientWithList[*v1beta1.BackupBucket, *v1beta1.BackupBucketList](
			fake.Fake,
			"",
			v1beta1.SchemeGroupVersion.WithResource("backupbuckets"),
			v1beta1.SchemeGroupVersion.WithKind("BackupBucket"),
			func() *v1beta1.BackupBucket { return &v1beta1.BackupBucket{} },
			func() *v1beta1.BackupBucketList { return &v1beta1.BackupBucketList{} },
			func(dst, src *v1beta1.BackupBucketList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.BackupBucketList) []*v1beta1.BackupBucket {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1beta1.BackupBucketList, items []*v1beta1.BackupBucket) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
