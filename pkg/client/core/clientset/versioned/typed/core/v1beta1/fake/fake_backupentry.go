// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/gardener/gardener/pkg/apis/core/v1beta1"
	corev1beta1 "github.com/gardener/gardener/pkg/client/core/clientset/versioned/typed/core/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeBackupEntries implements BackupEntryInterface
type fakeBackupEntries struct {
	*gentype.FakeClientWithList[*v1beta1.BackupEntry, *v1beta1.BackupEntryList]
	Fake *FakeCoreV1beta1
}

func newFakeBackupEntries(fake *FakeCoreV1beta1, namespace string) corev1beta1.BackupEntryInterface {
	return &fakeBackupEntries{
		gentype.NewFakeClientWithList[*v1beta1.BackupEntry, *v1beta1.BackupEntryList](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("backupentries"),
			v1beta1.SchemeGroupVersion.WithKind("BackupEntry"),
			func() *v1beta1.BackupEntry { return &v1beta1.BackupEntry{} },
			func() *v1beta1.BackupEntryList { return &v1beta1.BackupEntryList{} },
			func(dst, src *v1beta1.BackupEntryList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.BackupEntryList) []*v1beta1.BackupEntry { return gentype.ToPointerSlice(list.Items) },
			func(list *v1beta1.BackupEntryList, items []*v1beta1.BackupEntry) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
