// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/gardener/gardener/pkg/apis/core/v1"
	corev1 "github.com/gardener/gardener/pkg/client/core/clientset/versioned/typed/core/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeControllerDeployments implements ControllerDeploymentInterface
type fakeControllerDeployments struct {
	*gentype.FakeClientWithList[*v1.ControllerDeployment, *v1.ControllerDeploymentList]
	Fake *FakeCoreV1
}

func newFakeControllerDeployments(fake *FakeCoreV1) corev1.ControllerDeploymentInterface {
	return &fakeControllerDeployments{
		gentype.NewFakeClientWithList[*v1.ControllerDeployment, *v1.ControllerDeploymentList](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("controllerdeployments"),
			v1.SchemeGroupVersion.WithKind("ControllerDeployment"),
			func() *v1.ControllerDeployment { return &v1.ControllerDeployment{} },
			func() *v1.ControllerDeploymentList { return &v1.ControllerDeploymentList{} },
			func(dst, src *v1.ControllerDeploymentList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ControllerDeploymentList) []*v1.ControllerDeployment {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.ControllerDeploymentList, items []*v1.ControllerDeployment) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
