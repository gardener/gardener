// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/gardener/gardener/pkg/apis/seedmanagement/v1alpha1"
	seedmanagementv1alpha1 "github.com/gardener/gardener/pkg/client/seedmanagement/clientset/versioned/typed/seedmanagement/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeGardenlets implements GardenletInterface
type fakeGardenlets struct {
	*gentype.FakeClientWithList[*v1alpha1.Gardenlet, *v1alpha1.GardenletList]
	Fake *FakeSeedmanagementV1alpha1
}

func newFakeGardenlets(fake *FakeSeedmanagementV1alpha1, namespace string) seedmanagementv1alpha1.GardenletInterface {
	return &fakeGardenlets{
		gentype.NewFakeClientWithList[*v1alpha1.Gardenlet, *v1alpha1.GardenletList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("gardenlets"),
			v1alpha1.SchemeGroupVersion.WithKind("Gardenlet"),
			func() *v1alpha1.Gardenlet { return &v1alpha1.Gardenlet{} },
			func() *v1alpha1.GardenletList { return &v1alpha1.GardenletList{} },
			func(dst, src *v1alpha1.GardenletList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.GardenletList) []*v1alpha1.Gardenlet { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.GardenletList, items []*v1alpha1.Gardenlet) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
