// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	seedmanagementv1alpha1 "github.com/gardener/gardener/pkg/apis/seedmanagement/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// GardenletApplyConfiguration represents an declarative configuration of the Gardenlet type for use
// with apply.
type GardenletApplyConfiguration struct {
	Deployment      *GardenletDeploymentApplyConfiguration `json:"deployment,omitempty"`
	Config          *runtime.RawExtension                  `json:"config,omitempty"`
	Bootstrap       *seedmanagementv1alpha1.Bootstrap      `json:"bootstrap,omitempty"`
	MergeWithParent *bool                                  `json:"mergeWithParent,omitempty"`
}

// GardenletApplyConfiguration constructs an declarative configuration of the Gardenlet type for use with
// apply.
func Gardenlet() *GardenletApplyConfiguration {
	return &GardenletApplyConfiguration{}
}

// WithDeployment sets the Deployment field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Deployment field is set to the value of the last call.
func (b *GardenletApplyConfiguration) WithDeployment(value *GardenletDeploymentApplyConfiguration) *GardenletApplyConfiguration {
	b.Deployment = value
	return b
}

// WithConfig sets the Config field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Config field is set to the value of the last call.
func (b *GardenletApplyConfiguration) WithConfig(value runtime.RawExtension) *GardenletApplyConfiguration {
	b.Config = &value
	return b
}

// WithBootstrap sets the Bootstrap field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Bootstrap field is set to the value of the last call.
func (b *GardenletApplyConfiguration) WithBootstrap(value seedmanagementv1alpha1.Bootstrap) *GardenletApplyConfiguration {
	b.Bootstrap = &value
	return b
}

// WithMergeWithParent sets the MergeWithParent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MergeWithParent field is set to the value of the last call.
func (b *GardenletApplyConfiguration) WithMergeWithParent(value bool) *GardenletApplyConfiguration {
	b.MergeWithParent = &value
	return b
}
