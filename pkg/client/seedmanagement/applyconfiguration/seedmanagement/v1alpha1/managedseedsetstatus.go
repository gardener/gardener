// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1beta1 "github.com/gardener/gardener/pkg/apis/core/v1beta1"
)

// ManagedSeedSetStatusApplyConfiguration represents an declarative configuration of the ManagedSeedSetStatus type for use
// with apply.
type ManagedSeedSetStatusApplyConfiguration struct {
	ObservedGeneration *int64                            `json:"observedGeneration,omitempty"`
	Replicas           *int32                            `json:"replicas,omitempty"`
	ReadyReplicas      *int32                            `json:"readyReplicas,omitempty"`
	NextReplicaNumber  *int32                            `json:"nextReplicaNumber,omitempty"`
	CurrentReplicas    *int32                            `json:"currentReplicas,omitempty"`
	UpdatedReplicas    *int32                            `json:"updatedReplicas,omitempty"`
	CurrentRevision    *string                           `json:"currentRevision,omitempty"`
	UpdateRevision     *string                           `json:"updateRevision,omitempty"`
	CollisionCount     *int32                            `json:"collisionCount,omitempty"`
	Conditions         []v1beta1.Condition               `json:"conditions,omitempty"`
	PendingReplica     *PendingReplicaApplyConfiguration `json:"pendingReplica,omitempty"`
}

// ManagedSeedSetStatusApplyConfiguration constructs an declarative configuration of the ManagedSeedSetStatus type for use with
// apply.
func ManagedSeedSetStatus() *ManagedSeedSetStatusApplyConfiguration {
	return &ManagedSeedSetStatusApplyConfiguration{}
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *ManagedSeedSetStatusApplyConfiguration) WithObservedGeneration(value int64) *ManagedSeedSetStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *ManagedSeedSetStatusApplyConfiguration) WithReplicas(value int32) *ManagedSeedSetStatusApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithReadyReplicas sets the ReadyReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyReplicas field is set to the value of the last call.
func (b *ManagedSeedSetStatusApplyConfiguration) WithReadyReplicas(value int32) *ManagedSeedSetStatusApplyConfiguration {
	b.ReadyReplicas = &value
	return b
}

// WithNextReplicaNumber sets the NextReplicaNumber field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NextReplicaNumber field is set to the value of the last call.
func (b *ManagedSeedSetStatusApplyConfiguration) WithNextReplicaNumber(value int32) *ManagedSeedSetStatusApplyConfiguration {
	b.NextReplicaNumber = &value
	return b
}

// WithCurrentReplicas sets the CurrentReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CurrentReplicas field is set to the value of the last call.
func (b *ManagedSeedSetStatusApplyConfiguration) WithCurrentReplicas(value int32) *ManagedSeedSetStatusApplyConfiguration {
	b.CurrentReplicas = &value
	return b
}

// WithUpdatedReplicas sets the UpdatedReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpdatedReplicas field is set to the value of the last call.
func (b *ManagedSeedSetStatusApplyConfiguration) WithUpdatedReplicas(value int32) *ManagedSeedSetStatusApplyConfiguration {
	b.UpdatedReplicas = &value
	return b
}

// WithCurrentRevision sets the CurrentRevision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CurrentRevision field is set to the value of the last call.
func (b *ManagedSeedSetStatusApplyConfiguration) WithCurrentRevision(value string) *ManagedSeedSetStatusApplyConfiguration {
	b.CurrentRevision = &value
	return b
}

// WithUpdateRevision sets the UpdateRevision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpdateRevision field is set to the value of the last call.
func (b *ManagedSeedSetStatusApplyConfiguration) WithUpdateRevision(value string) *ManagedSeedSetStatusApplyConfiguration {
	b.UpdateRevision = &value
	return b
}

// WithCollisionCount sets the CollisionCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CollisionCount field is set to the value of the last call.
func (b *ManagedSeedSetStatusApplyConfiguration) WithCollisionCount(value int32) *ManagedSeedSetStatusApplyConfiguration {
	b.CollisionCount = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ManagedSeedSetStatusApplyConfiguration) WithConditions(values ...v1beta1.Condition) *ManagedSeedSetStatusApplyConfiguration {
	for i := range values {
		b.Conditions = append(b.Conditions, values[i])
	}
	return b
}

// WithPendingReplica sets the PendingReplica field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PendingReplica field is set to the value of the last call.
func (b *ManagedSeedSetStatusApplyConfiguration) WithPendingReplica(value *PendingReplicaApplyConfiguration) *ManagedSeedSetStatusApplyConfiguration {
	b.PendingReplica = value
	return b
}
