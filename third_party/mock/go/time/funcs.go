// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener/third_party/mock/go/time (interfaces: Now)
//
// Generated by this command:
//
//	mockgen -destination=funcs.go -package=time github.com/gardener/gardener/third_party/mock/go/time Now
//

// Package time is a generated GoMock package.
package time

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockNow is a mock of Now interface.
type MockNow struct {
	ctrl     *gomock.Controller
	recorder *MockNowMockRecorder
	isgomock struct{}
}

// MockNowMockRecorder is the mock recorder for MockNow.
type MockNowMockRecorder struct {
	mock *MockNow
}

// NewMockNow creates a new mock instance.
func NewMockNow(ctrl *gomock.Controller) *MockNow {
	mock := &MockNow{ctrl: ctrl}
	mock.recorder = &MockNowMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNow) EXPECT() *MockNowMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockNow) Do() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// Do indicates an expected call of Do.
func (mr *MockNowMockRecorder) Do() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockNow)(nil).Do))
}
