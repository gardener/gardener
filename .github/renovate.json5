{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    ':semanticCommitsDisabled',
    'github>gardener/ci-infra//config/renovate/makefile-versions.json5',
    'github>gardener/ci-infra//config/renovate/imagevector.json5(^imagevector/containers.yaml$)',
    'github>gardener/ci-infra//config/renovate/automerge-with-tide.json5',
    'github>gardener/ci-infra//config/renovate/group-go-updates.json5',
  ],
  labels: [
    'kind/enhancement',
  ],
  postUpdateOptions: [
    'gomodTidy',
  ],
  prFooter: '**Release note**:\n```other dependency\nNONE\n```',
  rebaseWhen: 'conflicted',
  customManagers: [
    {
      customType: 'regex',
      managerFilePatterns: [
        '/^example/.+\\.yaml$/',
        '/^hack/.+\\.yaml$/',
        '/^\\.test-defs/.+\\.yaml$/',
        '/^charts/.+\\.yaml$/',
      ],
      matchStrings: [
        'image: ["|\']?(?<depName>.*?):(?<currentValue>.*?)["|\']?\\s',
      ],
      datasourceTemplate: 'docker',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '//kustomization\\.yaml$/',
      ],
      matchStrings: [
        'https://github\\.com/(?<depName>[^/]*/[^/]*?)/releases/download/(?<currentValue>.*?)/',
        'https://raw\\.githubusercontent\\.com/(?<depName>[^/]*/[^/]*?)/(?<currentValue>.*?)/',
      ],
      datasourceTemplate: 'github-releases',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/^hack/.+\\.sh$/',
      ],
      matchStrings: [
        '--image[=| ]["|\']?(?<depName>.*?):(?<currentValue>.*?)["|\']?\\s',
      ],
      datasourceTemplate: 'docker',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/^pkg/provider-local/imagevector/images.yaml$/',
      ],
      matchStrings: [
        '(?<depName>gcr\\.io/k8s-staging-kind/.*?):(?<currentValue>.*?)\\s',
      ],
      datasourceTemplate: 'docker',
    },
  ],
  separateMinorPatch: true,
  packageRules: [
    {
      matchUpdateTypes: [
        'patch',
      ],
      automerge: true,
    },
    {
      matchDatasources: [
        'go',
      ],
      matchPackageNames: [
        'k8s.io/utils',
      ],
      matchUpdateTypes: [
        'digest',
      ],
      automerge: true,
    },
    {
      matchDatasources: [
        'go',
      ],
      matchPackageNames: [
        'golang.org/x/*',
      ],
      matchUpdateTypes: [
        'minor',
        'patch',
        'digest',
      ],
      automerge: true,
    },
    {
      matchDatasources: [
        'go',
        'github-releases',
      ],
      postUpgradeTasks: {
        commands: [
          'make generate MODE=sequential',
        ],
        executionMode: 'branch',
      },
      matchPackageNames: [
        '/.+/api/.+/',
        '/.+/apis/.+/',
        '/.*gardener/etcd-druid$/',
        '/.*gardener/machine-controller-manager$/',
        '/.*gardener/terminal-controller-manager$/',
      ],
    },
    {
      groupName: 'istio',
      groupSlug: 'istio',
      description: 'Group Istio updates in one PR.',
      matchDatasources: [
        'docker',
        'go',
      ],
      matchPackageNames: [
        '/gcr\\.io/istio-release/.+/',
        '/istio\\.io/api/',
        '/istio\\.io/client-go/',
      ],
    },
    {
      groupName: 'etcd-druid',
      matchDatasources: [
        'github-releases',
        'go',
      ],
      matchPackageNames: [
        '/github\\.com/gardener/etcd-druid/',
        '/gardener/etcd-druid/',
      ],
    },
    {
      groupName: 'helm',
      matchDatasources: [
        'github-releases',
        'go',
      ],
      matchPackageNames: [
        '/helm\\.sh/helm/v3/',
        '/helm/helm/',
      ],
    },
    {
      groupName: 'prometheus',
      matchDatasources: [
        'github-releases',
        'docker',
      ],
      matchPackageNames: [
        '/.*prometheus/prometheus$/',
      ],
    },
    {
      groupName: 'prometheus-operator',
      matchDatasources: [
        'docker',
        'go',
      ],
      matchPackageNames: [
        '/quay\\.io/prometheus-operator/.+/',
        '/github\\.com/prometheus-operator/prometheus-operator/pkg/apis/.+/',
      ],
    },
    {
      groupName: 'gardener-discovery-server',
      matchDatasources: [
        'docker',
        'github-releases',
      ],
      matchPackageNames: [
        '/.+gardener-discovery-server$/',
      ],
    },
    {
      groupName: 'machine-controller-manager',
      matchDatasources: [
        'github-releases',
        'go',
      ],
      matchPackageNames: [
        '/.*gardener/machine-controller-manager$/',
      ],
    },
    {
      groupName: 'terminal-controller-manager',
      matchDatasources: [
        'github-releases',
        'go',
      ],
      matchPackageNames: [
        '/.*gardener/terminal-controller-manager$/',
      ],
    },
    {
      groupName: 'vpa-components',
      matchDatasources: [
        'docker',
      ],
      matchPackageNames: [
        'registry.k8s.io/autoscaling/vpa-admission-controller',
        'registry.k8s.io/autoscaling/vpa-recommender',
        'registry.k8s.io/autoscaling/vpa-updater',
      ],
    },
    {
      groupName: 'dependency-watchdog',
      matchDatasources: [
        'docker',
        'go',
        'github-releases',
      ],
      matchPackageNames: [
        '/.*?gardener/dependency-watchdog$/',
      ],
    },
    {
      groupName: 'blackbox-exporter',
      matchDatasources: [
        'docker',
        'go',
        'github-releases',
      ],
      matchPackageNames: [
        'github.com/prometheus/blackbox_exporter',
        'quay.io/prometheus/blackbox-exporter',
      ],
    },
    {
      matchDatasources: [
        'go',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
      ],
      dependencyDashboardApproval: true,
      matchPackageNames: [
        '/k8s\\.io/.+/',
        '/sigs\\.k8s\\.io/controller-runtime/',
        '/istio\\.io/.+/',
        '/github\\.com/fluent/.+/',
      ],
    },
    {
      matchDatasources: [
        'docker',
        'github-releases',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
      ],
      matchFileNames: [
        'imagevector/**',
      ],
      dependencyDashboardApproval: true,
      matchPackageNames: [
        '/fluent/.+/',
        '/gcr\\.io/istio-release/.+/',
        '/europe-docker\\.pkg\\.dev/gardener-project/releases/3rd/credativ/valitail/',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
      ],
      dependencyDashboardApproval: true,
      matchPackageNames: [
        '/kindest/node/',
      ],
    },
    {
      matchPackageNames: [
        'gopkg.in/yaml.v2',
      ],
      allowedVersions: '/^v2\\..+/',
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
      ],
      matchFileNames: [
        'hack/tools/image/variants\\.yaml',
      ],
      enabled: false,
    },
    {
      matchManagers: [
        'gomod',
      ],
      matchUpdateTypes: [
        'patch',
      ],
      enabled: false,
      matchPackageNames: [
        '/go/',
      ],
    },
    {
      matchDatasources: [
        'go',
      ],
      matchFileNames: [
        'hack/tools/logcheck/go\\.mod',
      ],
      enabled: false,
    },
    {
      matchDatasources: [
        'docker',
        'github-releases',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
      ],
      matchFileNames: [
        'imagevector/**',
      ],
      enabled: false,
      matchPackageNames: [
        '/gardener/autoscaler/',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchFileNames: [
        'imagevector/**',
      ],
      enabled: false,
      matchPackageNames: [
        '/quay.io/coreos/etcd/',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchFileNames: [
        'imagevector/**',
      ],
      enabled: false,
      matchPackageNames: [
        '/europe-docker\\.pkg\\.dev/gardener-project/releases/.+/',
        '!/europe-docker\\.pkg\\.dev/gardener-project/releases/3rd/alpine/',
        '!/europe-docker\\.pkg\\.dev/gardener-project/releases/3rd/kubernetesui/.+/',
      ],
    },
    {
      matchDatasources: [
        'github-releases',
      ],
      matchFileNames: [
        'imagevector/**',
      ],
      enabled: false,
      matchPackageNames: [
        '!/gardener/.+/',
        '!/credativ/.+/',
        '!/envoyproxy/.+/',
        '!/fluent/.+/',
        '!/perses/.+/',
      ],
    },
    {
      enabled: false,
      matchPackageNames: [
        '/local-skaffold/.+/',
      ],
    },
    {
      matchDatasources: [
        'go',
      ],
      enabled: false,
      matchPackageNames: [
        '/k8s\\.io/kube-openapi/',
      ],
    },
    {
      matchDatasources: [
        'go',
      ],
      matchPackageNames: [
        'gomodules.xyz/jsonpatch/v2',
      ],
      matchUpdateTypes: [
        'major',
      ],
      enabled: false,
    },
    {
      matchFileNames: [
        'imagevector/containers.yaml',
      ],
      matchPackageNames: [
        'registry.k8s.io/ingress-nginx/controller-chroot',
      ],
      matchCurrentValue: 'v1.11.*',
      allowedVersions: '<v1.12.0',
    },
    {
      matchDatasources: [
        'go',
      ],
      matchPackageNames: [
        'github.com/pelletier/go-toml',
      ],
      matchUpdateTypes: [
        'major',
      ],
      enabled: false,
    },
    {
      matchFileNames: [
        'cmd/**',
        'extensions/**',
        'pkg/**',
        'plugin/**',
        'test/**',
        'third_party/**',
      ],
      enabled: false,
    },
    {
      matchFileNames: [
        'pkg/provider-local/node/*',
      ],
      enabled: true,
    },
    {
      matchFileNames: [
        'imagevector/**',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
        'patch',
      ],
      prFooter: "**Release note**:\n```other dependency\nThe following dependencies have been updated:\n{{#each upgrades as |upgrade|}}\n- `{{upgrade.depName}}` from `{{upgrade.currentVersion}}` to `{{upgrade.newVersion}}`. {{#if (equals upgrade.datasource 'github-releases')}}[Release Notes](https://github.com/{{upgrade.depName}}/releases/tag/{{upgrade.newVersion}}){{/if}}\n{{/each}}\n```",
    },
  ],
}
