{{- if .Values.global.controller.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: gardener-controller-manager-configmap
  namespace: garden
  labels:
    app: gardener
    role: controller-manager
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  config.yaml: |
    ---
    apiVersion: controllermanager.config.gardener.cloud/v1alpha1
    kind: ControllerManagerConfiguration
    gardenClientConnection:
      {{- with .Values.global.controller.config.gardenClientConnection.acceptContentTypes }}
      acceptContentTypes: {{ . | quote }}
      {{- end }}
      {{- with .Values.global.controller.config.gardenClientConnection.contentType }}
      contentType: {{ . | quote }}
      {{- end }}
      qps: {{ required ".Values.global.controller.config.gardenClientConnection.qps is required" .Values.global.controller.config.gardenClientConnection.qps }}
      burst: {{ required ".Values.global.controller.config.gardenClientConnection.burst is required" .Values.global.controller.config.gardenClientConnection.burst }}
      {{- if .Values.global.controller.config.gardenClientConnection.kubeconfig }}
      kubeconfig: {{ .Values.global.controller.config.gardenClientConnection.kubeconfig }}
      {{- end }}
      {{- if .Values.global.controller.kubeconfig }}
      kubeconfig: /etc/gardener-controller-manager/kubeconfig/kubeconfig
      {{- end }}
    controllers:
      {{- if .Values.global.controller.config.controllers.bastion }}
      bastion:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.bastion.concurrentSyncs is required" .Values.global.controller.config.controllers.bastion.concurrentSyncs }}
        maxLifetime: {{ required ".Values.global.controller.config.controllers.bastion.maxLifetime is required" .Values.global.controller.config.controllers.bastion.maxLifetime }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.certificateSigningRequest }}
      certificateSigningRequest:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.certificateSigningRequest.concurrentSyncs is required" .Values.global.controller.config.controllers.certificateSigningRequest.concurrentSyncs }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.cloudProfile }}
      cloudProfile:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.cloudProfile.concurrentSyncs is required" .Values.global.controller.config.controllers.cloudProfile.concurrentSyncs }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.controllerDeployment }}
      controllerDeployment:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.controllerDeployment.concurrentSyncs is required" .Values.global.controller.config.controllers.controllerDeployment.concurrentSyncs }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.controllerRegistration }}
      controllerRegistration:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.controllerRegistration.concurrentSyncs is required" .Values.global.controller.config.controllers.controllerRegistration.concurrentSyncs }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.project }}
      project:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.project.concurrentSyncs is required" .Values.global.controller.config.controllers.project.concurrentSyncs }}
        {{- if .Values.global.controller.config.controllers.project.minimumLifetimeDays }}
        minimumLifetimeDays: {{ .Values.global.controller.config.controllers.project.minimumLifetimeDays }}
        {{- end }}
        {{- if .Values.global.controller.config.controllers.project.staleGracePeriodDays }}
        staleGracePeriodDays: {{ .Values.global.controller.config.controllers.project.staleGracePeriodDays }}
        {{- end }}
        {{- if .Values.global.controller.config.controllers.project.staleExpirationTimeDays }}
        staleExpirationTimeDays: {{ .Values.global.controller.config.controllers.project.staleExpirationTimeDays }}
        {{- end }}
        {{- if .Values.global.controller.config.controllers.project.staleSyncPeriod }}
        staleSyncPeriod: {{ .Values.global.controller.config.controllers.project.staleSyncPeriod }}
        {{- end }}
        {{- if .Values.global.controller.config.controllers.project.quotas }}
        quotas:
{{ toYaml .Values.global.controller.config.controllers.project.quotas | indent 10 }}
        {{- end }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.quota }}
      quota:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.quota.concurrentSyncs is required" .Values.global.controller.config.controllers.quota.concurrentSyncs }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.secretBinding }}
      secretBinding:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.secretBinding.concurrentSyncs is required" .Values.global.controller.config.controllers.secretBinding.concurrentSyncs }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.credentialsBinding }}
      credentialsBinding:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.credentialsBinding.concurrentSyncs is required" .Values.global.controller.config.controllers.credentialsBinding.concurrentSyncs }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.seed }}
      seed:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.seed.concurrentSyncs is required" .Values.global.controller.config.controllers.seed.concurrentSyncs }}
        syncPeriod: {{ required ".Values.global.controller.config.controllers.seed.syncPeriod is required" .Values.global.controller.config.controllers.seed.syncPeriod }}
        {{- if .Values.global.controller.config.controllers.seed.monitorPeriod }}
        monitorPeriod: {{ .Values.global.controller.config.controllers.seed.monitorPeriod }}
        {{- end }}
        {{- if .Values.global.controller.config.controllers.seed.shootMonitorPeriod }}
        shootMonitorPeriod: {{ .Values.global.controller.config.controllers.seed.shootMonitorPeriod }}
        {{- end }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.seedExtensionsCheck }}
      seedExtensionsCheck:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.seedExtensionsCheck.concurrentSyncs is required" .Values.global.controller.config.controllers.seedExtensionsCheck.concurrentSyncs }}
        syncPeriod: {{ required ".Values.global.controller.config.controllers.seedExtensionsCheck.syncPeriod is required" .Values.global.controller.config.controllers.seedExtensionsCheck.syncPeriod }}
        {{- if .Values.global.controller.config.controllers.seedExtensionsCheck.conditionThresholds }}
        conditionThresholds:
{{ toYaml .Values.global.controller.config.controllers.seedExtensionsCheck.conditionThresholds | indent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.seedBackupBucketsCheck }}
      seedBackupBucketsCheck:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.seedBackupBucketsCheck.concurrentSyncs is required" .Values.global.controller.config.controllers.seedBackupBucketsCheck.concurrentSyncs }}
        syncPeriod: {{ required ".Values.global.controller.config.controllers.seedBackupBucketsCheck.syncPeriod is required" .Values.global.controller.config.controllers.seedBackupBucketsCheck.syncPeriod }}
        {{- if .Values.global.controller.config.controllers.seedBackupBucketsCheck.conditionThresholds }}
        conditionThresholds:
{{ toYaml .Values.global.controller.config.controllers.seedBackupBucketsCheck.conditionThresholds | indent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.global.controller.config.controllers.event }}
      event:
        {{- if .Values.global.controller.config.controllers.event.concurrentSyncs }}
        concurrentSyncs: {{ .Values.global.controller.config.controllers.event.concurrentSyncs }}
        {{- end }}
        {{- if .Values.global.controller.config.controllers.event.ttlNonShootEvents }}
        ttlNonShootEvents: {{ .Values.global.controller.config.controllers.event.ttlNonShootEvents }}
        {{- end }}
      {{- end }}
      shootMaintenance:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.shootMaintenance.concurrentSyncs is required" .Values.global.controller.config.controllers.shootMaintenance.concurrentSyncs }}
        {{- if .Values.global.controller.config.controllers.shootMaintenance.enableShootControlPlaneRestarter }}
        enableShootControlPlaneRestarter: {{ .Values.global.controller.config.controllers.shootMaintenance.enableShootControlPlaneRestarter }}
        {{- end }}
        {{- if .Values.global.controller.config.controllers.shootMaintenance.enableShootCoreAddonRestarter }}
        enableShootCoreAddonRestarter: {{ .Values.global.controller.config.controllers.shootMaintenance.enableShootCoreAddonRestarter }}
        {{- end }}
      shootQuota:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.shootQuota.concurrentSyncs is required" .Values.global.controller.config.controllers.shootQuota.concurrentSyncs }}
        syncPeriod: {{ required ".Values.global.controller.config.controllers.shootQuota.syncPeriod is required" .Values.global.controller.config.controllers.shootQuota.syncPeriod }}
      shootHibernation:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.shootHibernation.concurrentSyncs is required" .Values.global.controller.config.controllers.shootHibernation.concurrentSyncs }}
        triggerDeadlineDuration: {{ required ".Values.global.controller.config.controllers.shootHibernation.triggerDeadlineDuration is required" .Values.global.controller.config.controllers.shootHibernation.triggerDeadlineDuration }}
      shootReference:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.shootReference.concurrentSyncs is required" .Values.global.controller.config.controllers.shootReference.concurrentSyncs }}
      shootRetry:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.shootRetry.concurrentSyncs is required" .Values.global.controller.config.controllers.shootRetry.concurrentSyncs }}
        {{- if .Values.global.controller.config.controllers.shootRetry.retryPeriod }}
        retryPeriod: {{ .Values.global.controller.config.controllers.shootRetry.retryPeriod }}
        {{- end }}
        {{- if .Values.global.controller.config.controllers.shootRetry.retryJitterPeriod }}
        retryJitterPeriod: {{ .Values.global.controller.config.controllers.shootRetry.retryJitterPeriod }}
        {{- end }}
      managedSeedSet:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.managedSeedSet.concurrentSyncs is required" .Values.global.controller.config.controllers.managedSeedSet.concurrentSyncs }}
        {{- if .Values.global.controller.config.controllers.managedSeedSet.maxShootRetries }}
        maxShootRetries: {{ .Values.global.controller.config.controllers.managedSeedSet.maxShootRetries }}
        {{- end }}
        syncPeriod: {{ required ".Values.global.controller.config.controllers.managedSeedSet.syncPeriod is required" .Values.global.controller.config.controllers.managedSeedSet.syncPeriod }}
      {{- if .Values.global.controller.config.controllers.exposureClass }}
      exposureClass:
        concurrentSyncs: {{ required ".Values.global.controller.config.controllers.exposureClass.concurrentSyncs is required" .Values.global.controller.config.controllers.exposureClass.concurrentSyncs }}
      {{- end }}
    leaderElection:
      leaderElect: {{ required ".Values.global.controller.config.leaderElection.leaderElect is required" .Values.global.controller.config.leaderElection.leaderElect }}
      leaseDuration: {{ required ".Values.global.controller.config.leaderElection.leaseDuration is required" .Values.global.controller.config.leaderElection.leaseDuration }}
      renewDeadline: {{ required ".Values.global.controller.config.leaderElection.renewDeadline is required" .Values.global.controller.config.leaderElection.renewDeadline }}
      retryPeriod: {{ required ".Values.global.controller.config.leaderElection.retryPeriod is required" .Values.global.controller.config.leaderElection.retryPeriod }}
      resourceLock: {{ required ".Values.global.controller.config.leaderElection.resourceLock is required" .Values.global.controller.config.leaderElection.resourceLock }}
      {{- if .Values.global.controller.config.leaderElection.resourceName }}
      resourceName: {{ .Values.global.controller.config.leaderElection.resourceName }}
      {{- end }}
      {{- if .Values.global.controller.config.leaderElection.resourceNamespace }}
      resourceNamespace: {{ .Values.global.controller.config.leaderElection.resourceNamespace }}
      {{- end }}
    logLevel: {{ required ".Values.global.controller.config.logLevel is required" .Values.global.controller.config.logLevel }}
    server:
      healthProbes:
        {{- if .Values.global.controller.config.server.healthProbes.bindAddress }}
        bindAddress: {{ .Values.global.controller.config.server.healthProbes.bindAddress }}
        {{- end }}
        port: {{ required ".Values.global.controller.config.server.healthProbes.port is required" .Values.global.controller.config.server.healthProbes.port }}
      {{- if .Values.global.controller.config.server.metrics }}
      metrics:
        {{- if .Values.global.controller.config.server.metrics.bindAddress }}
        bindAddress: {{ .Values.global.controller.config.server.metrics.bindAddress }}
        {{- end }}
        port: {{ required ".Values.global.controller.config.server.metrics.port is required" .Values.global.controller.config.server.metrics.port }}
      {{- end }}
    {{- if .Values.global.controller.config.debugging }}
    debugging:
      enableProfiling: {{ .Values.global.controller.config.debugging.enableProfiling | default false }}
      enableContentionProfiling: {{ .Values.global.controller.config.debugging.enableContentionProfiling | default false }}
    {{- end }}
    {{- if .Values.global.controller.config.featureGates }}
    featureGates:
{{ toYaml .Values.global.controller.config.featureGates | indent 6 }}
    {{- end }}
{{- end }}
