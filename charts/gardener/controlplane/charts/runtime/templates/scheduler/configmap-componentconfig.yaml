{{- if .Values.global.scheduler.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: gardener-scheduler-configmap
  namespace: garden
  labels:
    app: gardener
    role: scheduler
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  schedulerconfiguration.yaml: |
    ---
    apiVersion: scheduler.config.gardener.cloud/v1alpha1
    kind: SchedulerConfiguration
    clientConnection:
      {{- with .Values.global.scheduler.config.clientConnection.acceptContentTypes }}
      acceptContentTypes: {{ . | quote }}
      {{- end }}
      {{- with .Values.global.scheduler.config.clientConnection.contentType }}
      contentType: {{ . | quote }}
      {{- end }}
      qps: {{ required ".Values.global.scheduler.config.clientConnection.qps is required" .Values.global.scheduler.config.clientConnection.qps }}
      burst: {{ required ".Values.global.scheduler.config.clientConnection.burst is required" .Values.global.scheduler.config.clientConnection.burst }}
      {{- if .Values.global.scheduler.config.clientConnection.kubeconfig }}
      kubeconfig: {{ .Values.global.scheduler.config.clientConnection.kubeconfig }}
      {{- end }}
      {{- if .Values.global.scheduler.kubeconfig }}
      kubeconfig: /etc/gardener-scheduler/kubeconfig/kubeconfig
      {{- end }}
    leaderElection:
      leaderElect: {{ required ".Values.global.scheduler.config.leaderElection.leaderElect is required" .Values.global.scheduler.config.leaderElection.leaderElect }}
      leaseDuration: {{ required ".Values.global.scheduler.config.leaderElection.leaseDuration is required" .Values.global.scheduler.config.leaderElection.leaseDuration }}
      renewDeadline: {{ required ".Values.global.scheduler.config.leaderElection.renewDeadline is required" .Values.global.scheduler.config.leaderElection.renewDeadline }}
      retryPeriod: {{ required ".Values.global.scheduler.config.leaderElection.retryPeriod is required" .Values.global.scheduler.config.leaderElection.retryPeriod }}
      resourceLock: {{ required ".Values.global.scheduler.config.leaderElection.resourceLock is required" .Values.global.scheduler.config.leaderElection.resourceLock }}
      {{- if .Values.global.scheduler.config.leaderElection.resourceNamespace }}
      resourceNamespace: {{ .Values.global.scheduler.config.leaderElection.resourceNamespace }}
      {{- end }}
      {{- if .Values.global.scheduler.config.leaderElection.resourceName }}
      resourceName: {{ .Values.global.scheduler.config.leaderElection.resourceName }}
      {{- end }}
    logLevel: {{ required ".Values.global.scheduler.config.logLevel is required" .Values.global.scheduler.config.logLevel }}
    server:
      healthProbes:
        {{- if .Values.global.scheduler.config.server.healthProbes.bindAddress }}
        bindAddress: {{ .Values.global.scheduler.config.server.healthProbes.bindAddress }}
        {{- end }}
        port: {{ required ".Values.global.scheduler.config.server.healthProbes.port is required" .Values.global.scheduler.config.server.healthProbes.port }}
      metrics:
        {{- if .Values.global.scheduler.config.server.metrics.bindAddress }}
        bindAddress: {{ .Values.global.scheduler.config.server.metrics.bindAddress }}
        {{- end }}
        port: {{ required ".Values.global.scheduler.config.server.metrics.port is required" .Values.global.scheduler.config.server.metrics.port }}
    {{- if .Values.global.scheduler.config.debugging }}
    debugging:
      enableProfiling: {{ .Values.global.scheduler.config.debugging.enableProfiling | default false }}
      enableContentionProfiling: {{ .Values.global.scheduler.config.debugging.enableContentionProfiling | default false }}
    {{- end }}
    {{- if .Values.global.scheduler.config.schedulers }}
    schedulers:
      {{- if .Values.global.scheduler.config.schedulers.backupBucket }}
      backupBucket:
        concurrentSyncs: {{ .Values.global.scheduler.config.schedulers.backupBucket.concurrentSyncs }}
      {{- end }}
      {{- if .Values.global.scheduler.config.schedulers.shoot }}
      shoot:
        concurrentSyncs: {{ .Values.global.scheduler.config.schedulers.shoot.concurrentSyncs }}
        candidateDeterminationStrategy: {{ required ".Values.global.scheduler.config.schedulers.shoot.candidateDeterminationStrategy is required" .Values.global.scheduler.config.schedulers.shoot.candidateDeterminationStrategy }}
      {{- end }}
    {{- end }}
    {{- if .Values.global.scheduler.config.featureGates }}
    featureGates:
      {{- toYaml .Values.global.scheduler.config.featureGates | nindent 6 }}
    {{- end }}
{{- end }}
