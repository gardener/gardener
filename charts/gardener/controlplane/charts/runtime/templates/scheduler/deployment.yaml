{{- if .Values.global.scheduler.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gardener-scheduler
  namespace: garden
  labels:
    app: gardener
    role: scheduler
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ required ".Values.global.scheduler.replicaCount is required" .Values.global.scheduler.replicaCount }}
  selector:
    matchLabels:
      app: gardener
      role: scheduler
  template:
    metadata:
      annotations:
        checksum/configmap-gardener-scheduler-config: {{ include (print $.Template.BasePath "/scheduler/configmap-componentconfig.yaml") . | sha256sum }}
        checksum/secret-gardener-scheduler-kubeconfig: {{ include (print $.Template.BasePath "/scheduler/secret-kubeconfig.yaml") . | sha256sum }}
        {{- if .Values.global.scheduler.podAnnotations }}
{{ toYaml .Values.global.scheduler.podAnnotations | indent 8 }}
        {{- end }}
      labels:
        app: gardener
        role: scheduler
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        {{- if .Values.global.scheduler.podLabels }}
{{ toYaml .Values.global.scheduler.podLabels | indent 8 }}
        {{- end }}
    spec:
      priorityClassName: gardener-controlplane
      {{- if not .Values.global.deployment.virtualGarden.enabled }}
      serviceAccountName: {{ required ".Values.global.scheduler.serviceAccountName is required" .Values.global.scheduler.serviceAccountName }}
      {{- else if and .Values.global.deployment.virtualGarden.enabled .Values.global.deployment.virtualGarden.scheduler.user.name }}
        {{- if .Values.global.scheduler.serviceAccountTokenVolumeProjection.enabled }}
      serviceAccountName: {{ required ".Values.global.scheduler.serviceAccountName is required" .Values.global.scheduler.serviceAccountName }}
        {{- else }}
      serviceAccountName: default
        {{- end }}
      {{- else }}
      serviceAccountName: default
      {{- end }}
      {{- if .Values.global.scheduler.kubeconfig }}
      automountServiceAccountToken: false
      {{- end }}
      {{- if gt (int .Values.global.scheduler.replicaCount) 1 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - gardener
                - key: role
                  operator: In
                  values:
                  - scheduler
              topologyKey: kubernetes.io/hostname
            weight: 1
      {{- end }}
      containers:
      - name: gardener-scheduler
        image: {{ include "image" .Values.global.scheduler.image }}
        imagePullPolicy: {{ .Values.global.scheduler.image.pullPolicy }}
        args:
        - --config=/etc/gardener-scheduler/config/schedulerconfiguration.yaml
        {{- if .Values.global.scheduler.resources }}
        resources:
{{ toYaml .Values.global.scheduler.resources | indent 10 }}
        {{- end }}
        {{- if .Values.global.scheduler.config.server.healthProbes.enable }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ required ".Values.global.scheduler.config.server.healthProbes.port is required" .Values.global.scheduler.config.server.healthProbes.port }}
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ required ".Values.global.scheduler.config.server.healthProbes.port is required" .Values.global.scheduler.config.server.healthProbes.port }}
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 5
        {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        {{- if .Values.global.scheduler.kubeconfig }}
        - name: gardener-scheduler-kubeconfig
          mountPath: /etc/gardener-scheduler/kubeconfig
          readOnly: true
        {{- end }}
        {{- if .Values.global.scheduler.serviceAccountTokenVolumeProjection.enabled }}
        - name: service-account-token
          mountPath: /var/run/secrets/projected/serviceaccount
          readOnly: true
        {{- end }}
        - name: gardener-scheduler-config
          mountPath: /etc/gardener-scheduler/config
      volumes:
      {{- if .Values.global.scheduler.kubeconfig }}
      - name: gardener-scheduler-kubeconfig
        secret:
          secretName: gardener-scheduler-kubeconfig
      {{- end }}
      {{- if .Values.global.scheduler.serviceAccountTokenVolumeProjection.enabled }}
      - name: service-account-token
        projected:
          sources:
          - serviceAccountToken:
              path: token
              expirationSeconds: {{ .Values.global.scheduler.serviceAccountTokenVolumeProjection.expirationSeconds }}
              {{- if .Values.global.scheduler.serviceAccountTokenVolumeProjection.audience }}
              audience: {{ .Values.global.scheduler.serviceAccountTokenVolumeProjection.audience }}
              {{- end }}
      {{- end }}
      - name: gardener-scheduler-config
        configMap:
          name: gardener-scheduler-configmap
{{- end}}
