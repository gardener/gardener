{{- if .Values.global.admission.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: gardener-admission-controller-configmap
  namespace: garden
  labels:
    app: gardener
    role: admission-controller
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  config.yaml: |
    ---
    apiVersion: admissioncontroller.config.gardener.cloud/v1alpha1
    kind: AdmissionControllerConfiguration
    gardenClientConnection:
      {{- with .Values.global.admission.config.gardenClientConnection.acceptContentTypes }}
      acceptContentTypes: {{ . | quote }}
      {{- end }}
      {{- with .Values.global.admission.config.gardenClientConnection.contentType }}
      contentType: {{ . | quote }}
      {{- end }}
      qps: {{ required ".Values.global.admission.config.gardenClientConnection.qps is required" .Values.global.admission.config.gardenClientConnection.qps }}
      burst: {{ required ".Values.global.admission.config.gardenClientConnection.burst is required" .Values.global.admission.config.gardenClientConnection.burst }}
      {{- if .Values.global.admission.config.gardenClientConnection.kubeconfig }}
      kubeconfig: {{ .Values.global.admission.config.gardenClientConnection.kubeconfig }}
      {{- end }}
      {{- if .Values.global.admission.kubeconfig }}
      kubeconfig: /etc/gardener-admission-controller/kubeconfig/kubeconfig
      {{- end }}
    logLevel: {{ .Values.global.admission.config.logLevel | default "info" }}
    logFormat: {{ .Values.global.admission.config.logFormat | default "json" }}
    server:
      webhooks:
        {{- if .Values.global.admission.config.server.webhooks.bindAddress }}
        bindAddress: {{ .Values.global.admission.config.server.webhooks.bindAddress }}
        {{- end }}
        port: {{ required ".Values.global.admission.config.server.webhooks.port is required" .Values.global.admission.config.server.webhooks.port }}
        tls:
          serverCertDir: /etc/gardener-admission-controller/srv
      healthProbes:
        {{- if .Values.global.admission.config.server.healthProbes.bindAddress }}
        bindAddress: {{ .Values.global.admission.config.server.healthProbes.bindAddress }}
        {{- end }}
        port: {{ required ".Values.global.admission.config.server.healthProbes.port is required" .Values.global.admission.config.server.healthProbes.port }}
      metrics:
        {{- if .Values.global.admission.config.server.metrics.bindAddress }}
        bindAddress: {{ .Values.global.admission.config.server.metrics.bindAddress }}
        {{- end }}
        port: {{ required ".Values.global.admission.config.server.metrics.port is required" .Values.global.admission.config.server.metrics.port }}
      {{- if .Values.global.admission.config.server.resourceAdmissionConfiguration }}
      resourceAdmissionConfiguration:
        limits:
{{ toYaml .Values.global.admission.config.server.resourceAdmissionConfiguration.limits | indent 8 }}
        unrestrictedSubjects:
{{ toYaml .Values.global.admission.config.server.resourceAdmissionConfiguration.unrestrictedSubjects | indent 8 }}
        operationMode: {{ required ".Values.global.admission.config.server.resourceAdmissionConfiguration.operationMode is required" .Values.global.admission.config.server.resourceAdmissionConfiguration.operationMode }}
      {{- end }}
      enableDebugHandlers: {{ .Values.global.admission.config.server.enableDebugHandlers }}
    {{- if .Values.global.admission.config.debugging }}
    debugging:
      enableProfiling: {{ .Values.global.admission.config.debugging.enableProfiling | default false }}
      enableContentionProfiling: {{ .Values.global.admission.config.debugging.enableContentionProfiling | default false }}
    {{- end }}
{{- end }}
