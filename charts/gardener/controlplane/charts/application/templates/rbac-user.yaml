# Cluster role granting full permissions to all resources in the gardener API group.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:admin
  labels:
    gardener.cloud/role: admin
rules:
- apiGroups:
  - core.gardener.cloud
  - seedmanagement.gardener.cloud
  - dashboard.gardener.cloud
  - settings.gardener.cloud
  - operations.gardener.cloud
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - security.gardener.cloud
  resources:
  - credentialsbindings
  - workloadidentities # Do not use wildcard here to avoid granting users with permissions to send `create workloadidentity/token` requests.
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  - resourcequotas
  verbs:
  - '*'
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs:
  - '*'
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - '*'
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - '*'
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - '*'

# Aggregated cluster role specifying garden administrators.
# IMPORTANT: You need to define a corresponding ClusterRoleBinding binding specific users
#            to this ClusterRole on your own (users bound to this role have full access to
#            the Garden system).
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:administrators
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      gardener.cloud/role: admin
  - matchLabels:
      gardener.cloud/role: project-member
  - matchLabels:
      gardener.cloud/role: project-serviceaccountmanager
rules: []

# Cluster role granting viewer permissions for the resources in the gardener API group
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:viewer
  labels:
    gardener.cloud/role: viewer
rules:
- apiGroups:
  - core.gardener.cloud
  resources:
  - backupbuckets
  - backupentries
  - cloudprofiles
  - namespacedcloudprofiles
  - controllerinstallations
  - quotas
  - projects
  - seeds
  - shoots
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - security.gardener.cloud
  resources:
  - credentialsbindings
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - seedmanagement.gardener.cloud
  - dashboard.gardener.cloud
  - settings.gardener.cloud
  - operations.gardener.cloud
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  - resourcequotas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch

# Aggregated cluster role specifying permissions for the users with view access for a Gardener landscape.
# IMPORTANT: You need to define a corresponding ClusterRoleBinding binding specific users
#            to this ClusterRole on your own (users bound to this role have viewer access to
#            the Garden system).
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:viewers
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      gardener.cloud/role: viewer
  - matchLabels:
      gardener.cloud/role: project-viewer
rules: []

# Cluster role with cluster role binding allowing all authenticated users to read some global resources
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:read-global-resources
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - core.gardener.cloud
  resources:
  - cloudprofiles
  - exposureclasses
  - seeds
  verbs:
  - get
  - list
  - watch
# allow shoot owners to use kube-state-metrics with a custom resource state configuration to expose metrics about e.g. shoots
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:system:read-global-resources
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gardener.cloud:system:read-global-resources
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated

# Cluster role with cluster role binding allowing all authenticated users create tokenreviews and selfsubjectaccessreviews
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:user-auth
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - selfsubjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:system:user-auth
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gardener.cloud:system:user-auth
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated

# Role with role binding allowing all authenticated users to read the kube-system/cluster-identity configmap
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gardener.cloud:system:read-cluster-identity-configmap
  namespace: kube-system
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  - cluster-identity
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gardener.cloud:system:read-cluster-identity-configmap
  namespace: kube-system
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gardener.cloud:system:read-cluster-identity-configmap
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated

# Cluster role for allowing creation of projects.
# IMPORTANT: You need to define a corresponding ClusterRoleBinding binding specific users/
#            groups/serviceaccounts to this ClusterRole on your own.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-creation
  labels:
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - core.gardener.cloud
  resources:
  - projects
  verbs:
  - create

# Cluster role setting the permissions for a project member. It gets bound by a RoleBinding
# in a respective project namespace.
# It aggregates all ClusterRoles labeled with rbac.gardener.cloud/aggregate-to-project-member: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-member
  labels:
    gardener.cloud/role: project-member
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.gardener.cloud/aggregate-to-project-member: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-member-aggregation
  labels:
    rbac.gardener.cloud/aggregate-to-project-member: "true"
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - resourcequotas
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - core.gardener.cloud
  resources:
  - shoots
  - secretbindings
  - quotas
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.gardener.cloud
  resources:
  - credentialsbindings
  - workloadidentities # Do not use wildcard here to avoid granting users with permissions to send `create workloadidentity/token` requests.
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - settings.gardener.cloud
  resources:
  - openidconnectpresets
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operations.gardener.cloud
  resources:
  - bastions
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.gardener.cloud
  resources:
  - shoots/adminkubeconfig
  - shoots/viewerkubeconfig
  verbs:
  - create
- apiGroups:
  - core.gardener.cloud
  resources:
  - namespacedcloudprofiles
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
  - delete

# Cluster role setting the permissions for a project service account manager. It gets bound by a RoleBinding
# in a respective project namespace.
# It aggregates all ClusterRoles labeled with rbac.gardener.cloud/aggregate-to-project-serviceaccountmanager: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-serviceaccountmanager
  labels:
    gardener.cloud/role: project-serviceaccountmanager
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.gardener.cloud/aggregate-to-project-serviceaccountmanager: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-serviceaccountmanager-aggregation
  labels:
    rbac.gardener.cloud/aggregate-to-project-serviceaccountmanager: "true"
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create

# Cluster role setting the permissions for a project viewer. It gets bound by a RoleBinding
# in a respective project namespace.
# It aggregates all ClusterRoles labeled with rbac.gardener.cloud/aggregate-to-project-viewer: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-viewer
  labels:
    gardener.cloud/role: project-viewer
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.gardener.cloud/aggregate-to-project-viewer: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gardener.cloud:system:project-viewer-aggregation
  labels:
    rbac.gardener.cloud/aggregate-to-project-viewer: "true"
    app: gardener
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - ""
  resources:
  - events
  - configmaps
  - resourcequotas
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - core.gardener.cloud
  resources:
  - shoots
  - secretbindings
  - quotas
  - namespacedcloudprofiles
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - security.gardener.cloud
  resources:
  - credentialsbindings
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - settings.gardener.cloud
  resources:
  - openidconnectpresets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operations.gardener.cloud
  resources:
  - bastions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - core.gardener.cloud
  resources:
  - shoots/viewerkubeconfig
  verbs:
  - create
