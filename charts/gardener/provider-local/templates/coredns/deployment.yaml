{{- if eq (include "coredns.enabled" .) "true" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: coredns
  name: coredns
  namespace: gardener-extension-provider-local-coredns
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: coredns
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/coredns/configmap.yaml") . | sha256sum }}
      labels:
        app: coredns
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        # TODO(marc1404): When updating coredns to v1.13.x check if the NET_BIND_SERVICE capability can be removed.
        image: registry.k8s.io/coredns/coredns:v1.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 9053
          name: dns
          protocol: UDP
        - containerPort: 9053
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE # TODO(marc1404): When updating coredns to v1.13.x check if the NET_BIND_SERVICE capability can be removed.
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
        - mountPath: /etc/coredns/custom
          name: custom-config-volume
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume
      - configMap:
          defaultMode: 420
          name: coredns-custom
          optional: true
        name: custom-config-volume
{{- end -}}
